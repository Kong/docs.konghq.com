name: Run Tests
on:
  push:
   branches:
     - main
  pull_request:
    types: [synchronize, ready_for_review, opened]
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

env:
  VITE_PORTAL_API_URL: ${{ vars.VITE_PORTAL_API_URL }}
  BUNDLE_GITHUB__COM: x-access-token:${{ secrets.BUNDLE_GITHUB__COM }}

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Increase number of watchers to fix tests
      - run: sudo sysctl -w fs.inotify.max_user_watches=524288
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # Configure Ruby to build Jekyll site
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
      - name: Ruby gem cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle Setup
        run: bundle config path ${{ github.workspace }}/vendor/bundle
      - name: Bundle Install
        run: bundle install --jobs 4 --retry 3
      - name: Install foreman
        run: gem install foreman

      # Configure Node to build assets
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      # Build the Docs
      - name: Build Docs
        run: |
          npm ci
          exe/build

      - name: Run Smoke Tests
        env:
          JEKYLL_ENV: production
        run: |
          npm install -g wait-on
          netlify dev & wait-on http://localhost:8888
          npm test

      - name: Check for broken markdown anchors
        run: |
          ./tools/missing-markdown-anchor/run.sh

  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      # Configure Node to build assets
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - run: npm ci

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run specs
        run: bundle exec rspec
