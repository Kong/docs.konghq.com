openapi: 3.0.3
info:
  title: Portal API
  version: 2.1.0
  description: Portal API
  contact:
    name: Kong
    url: 'https://cloud.konghq.com'
servers:
  - url: 'https://custom.example.com'
    description: Production
paths:
  /api/v2/applications:
    get:
      operationId: list-applications
      summary: List Applications
      description: List applications owned by the developer currently logged in.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
        - $ref: '#/components/parameters/FilterByAuthStrategyEquality'
        - $ref: '#/components/parameters/FilterByAuthStrategyEqualityShort'
      responses:
        '200':
          $ref: '#/components/responses/ListApplications'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - portalAccessToken: []
      tags:
        - applications
    post:
      operationId: create-application
      summary: Create an Application
      description: Creates a new Application.
      requestBody:
        $ref: '#/components/requestBodies/CreateApplication'
      responses:
        '201':
          $ref: '#/components/responses/ApplicationCreation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      security:
        - portalAccessToken: []
      tags:
        - applications
  '/api/v2/applications/{applicationId}':
    get:
      operationId: get-application
      summary: Get an Application
      description: Gets the details for an existing application. You need only supply the unique application identifier that was returned upon application creation or by the list-applications endpoint.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '200':
          $ref: '#/components/responses/GetApplication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - applications
    delete:
      operationId: delete-application
      summary: Delete Application
      description: Deletes an application and all of its associated entities (registrations).
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '204':
          description: Application was deleted successfully.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - portalAccessToken: []
      tags:
        - applications
    patch:
      operationId: update-application
      summary: Update Application
      description: 'Updates an application, replacing specified properties with any new values supplied in the request body.'
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateApplication'
      responses:
        '200':
          $ref: '#/components/responses/ApplicationUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      security:
        - portalAccessToken: []
      tags:
        - applications
  '/api/v2/applications/{applicationId}/credentials':
    get:
      operationId: list-credentials
      summary: List credentials
      description: Lists the credentials for an application they own.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          $ref: '#/components/responses/ListCredentials'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      security:
        - portalAccessToken: []
      tags:
        - credentials
    post:
      operationId: create-credential
      summary: Create Credential for Application
      description: Allows a developer to create a credential for an application they own.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/CreateCredential'
      responses:
        '201':
          $ref: '#/components/responses/CredentialCreation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PostCredentials403Response'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - credentials
  '/api/v2/applications/{applicationId}/credentials/{credentialId}':
    put:
      operationId: update-credential
      summary: Update Credential
      description: Updates a credential for an application owned by the current logged in developer.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/CredentialId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCredential'
      responses:
        '200':
          description: Credential successfully updated.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - credentials
    delete:
      operationId: delete-credential
      summary: Delete Credential
      description: Deletes a credential for an application they own.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/CredentialId'
      responses:
        '204':
          description: Credential successfully deleted.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      security:
        - portalAccessToken: []
      tags:
        - credentials
  '/api/v2/applications/{applicationId}/product-versions/{productVersionId}/granted-scopes':
    get:
      operationId: get-application-product-version-granted-scopes
      summary: Get the granted scopes
      description: |
        Retrieves the granted scopes of a specified application and product version directly from the IDP.
        Scopes shared between product versions will be returned, even if not currently registered for given product version.
        Will return 422 if this feature is not supported by the application.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/ProductVersionId'
      responses:
        '200':
          $ref: '#/components/responses/GetGrantedScopesProductVersion'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/GetGrantedScopesProductVersion422Response'
      security:
        - portalAccessToken: []
      tags:
        - applications
  '/api/v2/applications/{applicationId}/refresh-token':
    post:
      operationId: refresh-application-token
      summary: Refresh Client Secret
      description: Resets the client secret for an application.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '201':
          $ref: '#/components/responses/RefreshToken'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - credentials
  '/api/v2/applications/{applicationId}/registrations':
    get:
      operationId: list-application-registrations
      summary: Get application registrations
      description: Lists product registrations for an application.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/FilterByIdEquality'
        - $ref: '#/components/parameters/FilterByIdEqualityShort'
        - $ref: '#/components/parameters/FilterByStatusEquality'
        - $ref: '#/components/parameters/FilterByStatusEqualityShort'
        - $ref: '#/components/parameters/FilterByProductNameEquality'
        - $ref: '#/components/parameters/FilterByProductNameEqualityShort'
        - $ref: '#/components/parameters/FilterByProductVersionNameEquality'
        - $ref: '#/components/parameters/FilterByProductVersionNameEqualityShort'
        - $ref: '#/components/parameters/FilterByProductVersionNameContains'
        - $ref: '#/components/parameters/FilterByProductNameContains'
      responses:
        '200':
          $ref: '#/components/responses/ListRegistrations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - registrations
    post:
      operationId: create-application-registration
      summary: Register an application for a product
      description: Registers an application for a product.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/CreateRegistration'
      responses:
        '201':
          $ref: '#/components/responses/CreateRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      security:
        - portalAccessToken: []
      tags:
        - registrations
  '/api/v2/applications/{applicationId}/registrations/{registrationId}':
    get:
      operationId: get-application-registration
      summary: Get an application registration
      description: Retrieves the specified product registration for an application.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/RegistrationId'
      responses:
        '200':
          $ref: '#/components/responses/GetRegistration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - registrations
    delete:
      operationId: delete-application-registration
      summary: Delete an application registration
      description: Unregister an application for a product version.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/RegistrationId'
      responses:
        '204':
          description: The registration has been deleted.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - registrations
  '/api/v2/applications/{applicationId}/registrations/{registrationId}/granted-scopes':
    get:
      operationId: get-application-registration-granted-scopes
      summary: Get the granted scopes of an application registration
      description: |
        Retrieves the granted scopes of a specified product registration directly from the IDP for an application.
        Will return 409 if this feature is not supported by the application.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/RegistrationId'
      responses:
        '200':
          $ref: '#/components/responses/GetGrantedScopes'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
      security:
        - portalAccessToken: []
      tags:
        - registrations
  /api/v2/applications/auth-strategies:
    get:
      operationId: list-application-auth-strategies
      summary: List the available auth strategies
      description: |
        Retrieve the available Auth Strategies on this portal.
        An Auth Strategy is a set of plugin configurations that represent how the gateway will perform authentication and authorization for a Product Version.
        It may reference to Key-Auth or an OIDC configuration (with or without DCR).
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
        - $ref: '#/components/parameters/FilterByCredentialTypeEquality'
      responses:
        '200':
          $ref: '#/components/responses/ListAuthStrategies'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - portalAccessToken: []
      tags:
        - applications
  /api/v2/developer:
    post:
      operationId: register
      summary: Register
      description: Register to the developer portal.
      requestBody:
        description: Developer registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayload'
            examples:
              RegisterDeveloperRequestExample1:
                $ref: '#/components/examples/RegisterDeveloperRequestExample1'
      responses:
        '201':
          description: the developer has been properly registered.
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - {}
      tags:
        - developer
  /api/v2/developer/authenticate:
    post:
      operationId: authenticate
      summary: Authenticate
      description: This endpoint allows a developer to authenticate to their portal using a username and password.
      requestBody:
        $ref: '#/components/requestBodies/AuthenticateRequest'
      responses:
        '204':
          description: No Content
          headers:
            Set-Cookie:
              schema:
                type: string
                example: |
                  portalaccesstoken=access12345; Path=/; Domain=example.us.portal.konghq.com; Expires=Thu, 20 Jul 2023 12:00:00 GMT; HttpOnly; Secure; SameSite=None
                  portalrefreshtoken=refresh12345; Path=/v2/refresh; Domain=example.us.portal.konghq.com; Expires=Thu, 20 Jul 2023 12:00:00 GMT; HttpOnly; Secure; SameSite=None
              description: The access and refresh tokens.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - developer
  /api/v2/developer/authenticate/sso:
    get:
      operationId: authenticate-sso
      summary: Authenticate SSO
      description: This endpoint allows a developer to authenticate to their portal using an external IdP.
      responses:
        '302':
          description: Found
        '400':
          $ref: '#/components/responses/BadRequest'
      tags:
        - developer
  /api/v2/developer/forgot-password:
    post:
      operationId: forgot-password
      summary: Forgot Password
      description: |
        Starts the password reset flow for the desired account. An email
        will be sent to the email address to initiate the password reset flow.
      requestBody:
        description: Developer registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordPayload'
      responses:
        '200':
          description: the password reset flow has been initiated.
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - {}
      tags:
        - developer
  /api/v2/developer/logout:
    post:
      operationId: logout
      summary: Logout
      description: This endpoint allows a developer to logout of the portal. This operation revokes all active tokens and clears the portal cookies.
      responses:
        '204':
          description: No Content
      tags:
        - developer
  /api/v2/developer/me:
    get:
      operationId: get-developer-me
      summary: Retrieve My Account
      description: Returns info about the current developer.
      responses:
        '200':
          $ref: '#/components/responses/MeResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - portalAccessToken: []
      tags:
        - developer
  /api/v2/developer/refresh:
    post:
      operationId: refresh
      summary: Refresh Access Token
      description: This endpoint allows a developer to refresh their existing access token.
      responses:
        '204':
          description: No Content
          headers:
            Set-Cookie:
              schema:
                type: string
                example: |
                  portalaccesstoken=access12345; Path=/; Domain=example.us.portal.konghq.com; Expires=Thu, 20 Jul 2023 12:00:00 GMT; HttpOnly; Secure; SameSite=None
                  portalrefreshtoken=refresh12345; Path=/v2/refresh; Domain=example.us.portal.konghq.com; Expires=Thu, 20 Jul 2023 12:00:00 GMT; HttpOnly; Secure; SameSite=None
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
      tags:
        - developer
  /api/v2/developer/reset-password:
    post:
      operationId: reset-password
      summary: Reset Password
      description: 'This endpoint allows a developer to reset their password, using a reset token.'
      requestBody:
        $ref: '#/components/requestBodies/ResetPasswordRequest'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      tags:
        - developer
    parameters: []
  /api/v2/developer/verify-email:
    post:
      operationId: verify-email
      summary: Verify Email
      description: This endpoint allows a new developer to verify their email.
      requestBody:
        $ref: '#/components/requestBodies/VerifyEmailRequest'
      responses:
        '202':
          $ref: '#/components/responses/VerifyEmailResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      tags:
        - developer
    parameters: []
  /api/v2/portal:
    get:
      operationId: get-portal-context
      summary: Get portal context
      description: Return the portal context object.
      responses:
        '200':
          $ref: '#/components/responses/GetPortalContextResponse'
      security:
        - {}
      tags:
        - portal
  /api/v2/portal/appearance:
    get:
      operationId: get-portal-appearance
      summary: Portal Appearance Details
      description: Gets appearance configuration object for the portal. This object is set in Konnect.
      responses:
        '200':
          $ref: '#/components/responses/GetPortalAppearanceResponse'
      security:
        - {}
      tags:
        - portal
  /api/v2/portal/catalog-cover:
    get:
      operationId: get-portal-catalog-cover
      summary: Portal Catalog Cover Banner
      description: Gets cover banner for the developer portal. This object is set in Konnect.
      responses:
        '200':
          $ref: '#/components/responses/GetPortalCoverResponse'
      security:
        - {}
      tags:
        - portal
  /api/v2/portal/logo:
    get:
      operationId: get-portal-logo
      summary: Portal Logo
      description: Gets logo of the developer portal. This object is set in Konnect.
      responses:
        '200':
          $ref: '#/components/responses/GetPortalLogoResponse'
      security:
        - {}
      tags:
        - portal
  /api/v2/products:
    get:
      operationId: list-products
      summary: List Products
      description: Returns a paginated list of published API Products.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
        - $ref: '#/components/parameters/FilterByDescriptionEquality'
        - $ref: '#/components/parameters/FilterByDescriptionEqualityShort'
        - $ref: '#/components/parameters/FilterByDescriptionContains'
        - $ref: '#/components/parameters/FilterByIdEquality'
        - $ref: '#/components/parameters/FilterByIdEqualityShort'
      responses:
        '200':
          $ref: '#/components/responses/ProductList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - products
  '/api/v2/products/{productId}':
    get:
      operationId: get-product
      summary: Get a product
      description: Gets the details for an existing published product.
      parameters:
        - $ref: '#/components/parameters/ProductId'
      responses:
        '200':
          $ref: '#/components/responses/ProductGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - products
  '/api/v2/products/{productId}/actions':
    parameters:
      - $ref: '#/components/parameters/ProductId'
    get:
      operationId: get-product-actions
      summary: Get Product Actions
      description: Get a list of actions that the current developer is allowed to perform on an API product.
      responses:
        '200':
          $ref: '#/components/responses/ProductActions'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/NotAvailable'
      tags:
        - products
  '/api/v2/products/{productId}/documents':
    get:
      operationId: list-product-documents
      summary: List product documents
      description: 'Returns a list of documents that are associated with a given product. The list is paginated, and is in either a list or tree format (based on the Accept header).'
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - name: Accept
          in: header
          schema:
            $ref: '#/components/schemas/DocumentContentTypeEnum'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          description: Lists documents for a given product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocuments'
            application/vnd.konnect.document-tree+json:
              schema:
                $ref: '#/components/schemas/ListDocumentsTree'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - documentation
  '/api/v2/products/{productId}/documents/{documentId}':
    get:
      operationId: get-product-document
      summary: Get one product document
      description: Returns the specified document from the product's document tree.
      parameters:
        - name: Accept
          in: header
          schema:
            $ref: '#/components/schemas/DocumentFormatContentTypeEnum'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/DocumentId'
      responses:
        '200':
          $ref: '#/components/responses/ProductDocumentGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - documentation
  '/api/v2/products/{productId}/versions':
    get:
      operationId: list-product-versions
      summary: Get page of product versions
      description: Returns paginated list of versions of a given product.
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
      responses:
        '200':
          $ref: '#/components/responses/ProductListVersions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - versions
  '/api/v2/products/{productId}/versions/{productVersionId}':
    get:
      operationId: get-product-version
      summary: Get product version
      description: Gets the details for an existing product version.
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductVersionId'
      responses:
        '200':
          $ref: '#/components/responses/ProductVersionGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - versions
  '/api/v2/products/{productId}/versions/{productVersionId}/applications':
    get:
      operationId: get-applications-by-product-version
      summary: Get applications by product version
      description: |-
        Get applications that have a registration for a given product version. Any registration for the version will count, regardless of status (i.e. even if it is pending, rejected, or revoked).
        Use the `unregistered` query param to return the inverse, only including applicatons that do not have a registration (regardless of status).
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductVersionId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
        - $ref: '#/components/parameters/FilterByStatusEquality'
        - $ref: '#/components/parameters/FilterByStatusEqualityShort'
        - $ref: '#/components/parameters/FilterByAuthStrategyEquality'
        - $ref: '#/components/parameters/FilterByAuthStrategyEqualityShort'
        - $ref: '#/components/parameters/QueryUnregisteredApplications'
      responses:
        '200':
          $ref: '#/components/responses/ProductVersionListApplications'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
      tags:
        - versions
  '/api/v2/products/{productId}/versions/{productVersionId}/spec':
    get:
      operationId: get-product-version-spec
      summary: Get spec for product version
      description: Returns the API specification document attached to given product version. Currently only OpenAPI is supported.
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductVersionId'
      responses:
        '200':
          $ref: '#/components/responses/ProductVersionSpecGet'
        '204':
          description: No specification is defined for the version.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - versions
  '/api/v2/products/{productId}/versions/{productVersionId}/spec/operations':
    get:
      operationId: get-product-version-spec-operations
      summary: Get operations in version spec
      description: Returns list of operations used in the API specification document attached to given product version.
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductVersionId'
      responses:
        '200':
          $ref: '#/components/responses/ProductVersionSpecOperationsGet'
        '204':
          description: Response when there are no operations to send because no spec is defined for the version.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - versions
  '/api/v2/search/{indices}':
    get:
      operationId: search-portal-entities
      summary: Search Portal Entities
      description: Returns paginated search results from the specified entities with the given search parameters.
      parameters:
        - $ref: '#/components/parameters/SearchIndices'
        - $ref: '#/components/parameters/SearchQuery'
        - $ref: '#/components/parameters/SearchJoin'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - portalAccessToken: []
        - {}
      tags:
        - search
  /api/v2/stats:
    post:
      operationId: query-application-analytics
      summary: Query Application Analytics
      description: Query
      requestBody:
        description: Object describing the query sent to analytics API.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryApplicationAnalytics'
            examples:
              Query with a single metric:
                $ref: '#/components/examples/QueryExampleWithMetric'
              Query with a metric and dimension:
                $ref: '#/components/examples/QueryExampleWithMetricAndDimension'
              Query with a metric and two dimensions:
                $ref: '#/components/examples/QueryExampleWithMetricAndMultipleDimensions'
              Query with time dimension:
                $ref: '#/components/examples/QueryExampleWithTimeDimension'
      responses:
        '200':
          $ref: '#/components/responses/QueryResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              examples:
                BadRequestExample:
                  $ref: '#/components/examples/BadRequestExample'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              examples:
                UnauthorizedExample:
                  $ref: '#/components/examples/UnauthorizedExample'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - portalAccessToken: []
      tags:
        - Application Analytics
  /api/v2/stats/config:
    get:
      operationId: get-application-analytics-config
      summary: Application Analytics Config
      description: Get config for application analytics
      responses:
        '200':
          $ref: '#/components/responses/GetConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - portalAccessToken: []
      tags:
        - Application Analytics
components:
  parameters:
    ApplicationId:
      name: applicationId
      in: path
      required: true
      description: Id of the targeted application
      schema:
        type: string
        format: uuid
    CredentialId:
      name: credentialId
      in: path
      required: true
      description: Id of the targeted credential
      schema:
        type: string
        format: uuid
    DocumentId:
      name: documentId
      in: path
      required: true
      description: Contains a unique identifier used by the Portal API for this resource.
      schema:
        type: string
        format: uuid
    FilterByAuthStrategyEquality:
      name: 'filter[auth_strategy_id][eq]'
      description: Filter by the id of the auth strategy supported by the application.
      in: query
      required: false
      schema:
        type: string
        example: 5be86298-147b-45ab-bfaf-a1bff97dce39
    FilterByAuthStrategyEqualityShort:
      name: 'filter[auth_strategy_id]'
      description: Filter by the id of the auth strategy supported by the application (short-hand).
      in: query
      required: false
      schema:
        type: string
        example: 5be86298-147b-45ab-bfaf-a1bff97dce39
    FilterByCredentialTypeEquality:
      name: 'filter[credential_type][eq]'
      description: Filter by direct equality comparison of the credential_type with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: key_auth
        enum:
          - client_credentials
          - self_managed_client_credentials
          - key_auth
    FilterByDescriptionContains:
      name: 'filter[description][contains]'
      description: Filter by contains comparison of the description property with a supplied substring
      in: query
      required: false
      schema:
        type: string
        example: portal
    FilterByDescriptionEquality:
      name: 'filter[description][eq]'
      description: Filter by direct equality comparison of the description property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: portal
    FilterByDescriptionEqualityShort:
      name: 'filter[description]'
      description: Filter by direct equality comparison (short-hand) of the description property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: portal
    FilterByIdEquality:
      name: 'filter[id][eq]'
      description: Filter by direct equality comparison of the id property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: 5be86298-147b-45ab-bfaf-a1bff97dce39
    FilterByIdEqualityShort:
      name: 'filter[id]'
      description: Filter by direct equality comparison (short-hand) of the id property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: 5be86298-147b-45ab-bfaf-a1bff97dce39
    FilterByNameContains:
      name: 'filter[name][contains]'
      description: Filter by contains comparison of the name property with a supplied substring
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByNameEquality:
      name: 'filter[name][eq]'
      description: Filter by direct equality comparison of the name property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByNameEqualityShort:
      name: 'filter[name]'
      description: Filter by direct equality comparison (short-hand) of the name property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByProductNameContains:
      name: 'filter[product_name][contains]'
      description: Filter by contains comparison of the product_name property with a supplied substring
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByProductNameEquality:
      name: 'filter[product_name][eq]'
      description: Filter by direct equality comparison of the product_name property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByProductNameEqualityShort:
      name: 'filter[product_name]'
      description: Filter by direct equality comparison (short-hand) of the product_name property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByProductVersionNameContains:
      name: 'filter[product_version_name][contains]'
      description: Filter by contains comparison of the product_version_name property with a supplied substring
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByProductVersionNameEquality:
      name: 'filter[product_version_name][eq]'
      description: Filter by direct equality comparison of the product_version_name property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByProductVersionNameEqualityShort:
      name: 'filter[product_version_name]'
      description: Filter by direct equality comparison (short-hand) of the product_version_name property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByStatusEquality:
      name: 'filter[status][eq]'
      description: Filter by direct equality comparison of the status property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: approved
        enum:
          - approved
          - pending
          - rejected
          - revoked
    FilterByStatusEqualityShort:
      name: 'filter[status]'
      description: Filter by direct equality comparison (short-hand) of the status property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: approved
        enum:
          - approved
          - pending
          - rejected
          - revoked
    PageNumber:
      name: 'page[number]'
      description: Determines which page of the entities to retrieve.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 1
    PageSize:
      name: 'page[size]'
      description: The maximum number of items to include per page. The last page of a collection may include fewer items.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 10
    ProductId:
      name: productId
      in: path
      required: true
      description: Contains a unique identifier used by the Portal API for this resource.
      schema:
        type: string
        format: uuid
    ProductVersionId:
      name: productVersionId
      in: path
      required: true
      description: Contains a unique identifier used by the Portal API for this resource.
      schema:
        type: string
        format: uuid
    QueryUnregisteredApplications:
      name: unregistered
      description: Return applications that do **not** have a registration for the product version (regardless of registration status).
      in: query
      required: false
      schema:
        type: boolean
      allowEmptyValue: true
    RegistrationId:
      name: registrationId
      in: path
      required: true
      description: Contains a unique identifier used by the Portal API for this resource.
      schema:
        type: string
        format: uuid
    SearchIndices:
      name: indices
      description: Determines which entity sets to search
      required: true
      in: path
      schema:
        $ref: '#/components/schemas/SearchIndicesParameters'
    SearchJoin:
      name: join
      description: Determines which sub-entities to include in search results
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SearchJoinParameters'
    SearchQuery:
      name: q
      description: Determines how to filter search results
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SearchQueryParameters'
  schemas:
    QueryApplicationAnalytics:
      type: object
      properties:
        start_ms:
          description: 'Unix timestamp in milliseconds specifying the lower bound to return data for the query, inclusive.'
          type: integer
        end_ms:
          description: 'Unix timestamp in milliseconds specifying upper bound to return data for the query, inclusive.'
          type: integer
        metrics:
          description: |
            A property of your API (such as request count or latency) that you wish to query on.
            Your chosen metric is aggregated within the specified dimensions, meaning that if you query 'request count by application', you'll receive the total number of requests each application received within the given time frame.  Some metrics, such as latency and response size, have more complicated aggregations: selecting P99 will result in the 99th percentile of the chosen metric.
          type: array
          items:
            type: string
            enum:
              - REQUEST_COUNT
              - REQUEST_PER_MINUTE
              - RESPONSE_LATENCY_P99
              - RESPONSE_LATENCY_P95
              - RESPONSE_LATENCY_P50
              - RESPONSE_SIZE_P99
              - RESPONSE_SIZE_P95
              - RESPONSE_SIZE_P50
              - REQUEST_SIZE_P99
              - REQUEST_SIZE_P95
              - REQUEST_SIZE_P50
          maxItems: 1
          minItems: 1
        dimensions:
          description: |
            The dimensions for the query.  A query may have up to 2 dimensions, including time.
            If no dimensions are provided, the report will simply return the provided metric aggregated across
            all available data.
          type: array
          items:
            type: string
            enum:
              - API_PRODUCT_VERSION
              - APPLICATION
              - STATUS_CODE
              - STATUS_CODE_GROUPED
              - TIME
          default: []
          maxItems: 2
          minItems: 0
        granularity_ms:
          description: |
            `granularity_ms` is only valid for queries that include a time dimension, and it specifies the time buckets in for the returned data.
          type: integer
          default: 86400000
        filter:
          type: array
          items:
            discriminator:
              propertyName: dimension
              mapping:
                API_PRODUCT_VERSION: '#/components/schemas/ApiProductVersionFilter'
                APPLICATION: '#/components/schemas/ApplicationFilter'
                STATUS_CODE: '#/components/schemas/StatusCodeFilter'
                STATUS_CODE_GROUPED: '#/components/schemas/StatusCodeGroupedFilter'
            oneOf:
              - $ref: '#/components/schemas/ApiProductVersionFilter'
              - $ref: '#/components/schemas/ApplicationFilter'
              - $ref: '#/components/schemas/StatusCodeFilter'
              - $ref: '#/components/schemas/StatusCodeGroupedFilter'
          default: []
      additionalProperties: false
      required:
        - start_ms
        - end_ms
        - metrics
    FilterType:
      description: 'The type of filter to apply.  `IN` filters will limit results to only the specified values, while `NOT_IN` filters will exclude the specified values.'
      type: string
      enum:
        - IN
        - NOT_IN
    ApiProductVersionFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - API_PRODUCT_VERSION
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            The UUIDs of the API product versions to include in the results.
          type: array
          items:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      additionalProperties: false
      required:
        - dimension
        - type
        - values
    ApplicationFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter. If no application filter is provided the API will implicitly filter on the applications owned by the developer making the query request.
          type: string
          enum:
            - APPLICATION
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            The UUIDs of the dev portal applications to include in the results.
          type: array
          items:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      additionalProperties: false
      required:
        - dimension
        - type
        - values
    StatusCodeFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - STATUS_CODE
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            Only include requests with specific status codes in the results.
          type: array
          items:
            type: integer
            minimum: 100
            maximum: 999
      additionalProperties: false
      required:
        - dimension
        - type
        - values
    StatusCodeGroupedFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - STATUS_CODE_GROUPED
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            Only include the given groups of status codes in the results.
          type: array
          items:
            type: string
            pattern: '^\d[X][X]$'
      additionalProperties: false
      required:
        - dimension
        - type
        - values
    QueryResponseMeta:
      description: Query response metadata.
      type: object
      properties:
        dimensions:
          description: The dimension name and values returned in the response.
          type: object
          additionalProperties: false
          properties:
            API_PRODUCT_VERSION:
              type: array
              items:
                type: string
            APPLICATION:
              type: array
              items:
                type: string
            STATUS_CODE:
              type: array
              items:
                type: string
            STATUS_CODE_GROUPED:
              type: array
              items:
                type: string
        metric_names:
          description: The metric requested in query.
          type: array
          items:
            type: string
            enum:
              - REQUEST_COUNT
              - REQUEST_PER_MINUTE
              - RESPONSE_LATENCY_P99
              - RESPONSE_LATENCY_P95
              - RESPONSE_LATENCY_P50
              - RESPONSE_SIZE_P99
              - RESPONSE_SIZE_P95
              - RESPONSE_SIZE_P50
              - REQUEST_SIZE_P99
              - REQUEST_SIZE_P95
              - REQUEST_SIZE_P50
          maxItems: 1
          minItems: 1
        metric_units:
          description: The unit of metric.
          type: object
          properties:
            REQUEST_COUNT:
              type: string
              default: count
            REQUEST_PER_MINUTE:
              type: string
              default: count/minute
            RESPONSE_LATENCY_P99:
              type: string
              default: ms
            RESPONSE_LATENCY_P95:
              type: string
              default: ms
            RESPONSE_LATENCY_P50:
              type: string
              default: ms
            RESPONSE_SIZE_P99:
              type: string
              default: bytes
            RESPONSE_SIZE_P95:
              type: string
              default: bytes
            RESPONSE_SIZE_P50:
              type: string
              default: bytes
            REQUEST_SIZE_P99:
              type: string
              default: bytes
            REQUEST_SIZE_P95:
              type: string
              default: bytes
            REQUEST_SIZE_P50:
              type: string
              default: bytes
        start_ms:
          description: Unix timestamp in milliseconds specifying the lower bound to return data for the query. Provided from the query parameters.
          type: integer
        end_ms:
          description: Unix timestamp in milliseconds specifying the upper bound to return data for the query. Provided from the query parameters.
          type: integer
        truncated:
          description: True if the limit of dimension values was reached and results were truncated. Limit value is 50.
          type: boolean
        granularity:
          description: 'The resulting time bucket for the returned data. If `TIME` was not specified as a dimension, granularity is the duration of the query.'
          type: integer
        query_id:
          description: Optional ID used to look up the query.
          type: string
      additionalProperties: false
    QueryResponseRecord:
      description: A response record.
      type: object
      properties:
        event:
          description: Event within the response. Mapping from the requested metrics and dimensions to the values.
          type: object
          additionalProperties: false
          properties:
            REQUEST_COUNT:
              description: The number or requests metric.
              type: integer
            REQUEST_PER_MINUTE:
              description: The number of requests per minute metric.
              type: number
            RESPONSE_LATENCY_P99:
              description: 99th percentile response latency metric in milliseconds.
              type: number
            RESPONSE_LATENCY_P95:
              description: 95th percentile response latency metric in milliseconds.
              type: number
            RESPONSE_LATENCY_P50:
              description: 50th percentile response latency metric in milliseconds.
              type: number
            RESPONSE_SIZE_P99:
              description: 99th percentile response size metric in bytes.
              type: number
            RESPONSE_SIZE_P95:
              description: 95th percentile response size metric in bytes.
              type: number
            RESPONSE_SIZE_P50:
              description: 50th percentile response size metric in bytes.
              type: number
            REQUEST_SIZE_P99:
              description: 99th percentile request size metric in bytes.
              type: number
            REQUEST_SIZE_P95:
              description: 95th percentile request size metric in bytes.
              type: number
            REQUEST_SIZE_P50:
              description: 50th percentile request size metric in bytes.
              type: number
            API_PRODUCT_VERSION:
              description: Dimension value for `API_PRODUCT_VERSION` name.
              type: string
            APPLICATION:
              description: Dimension value for `APPLICATION` name.
              type: string
            STATUS_CODE:
              description: Dimension value for `STATUS_CODE`.
              type: string
            STATUS_CODE_GROUPED:
              description: Dimension value for `STATUS_CODE_GROUPED`.
              type: string
        timestamp:
          description: An ISO-8601 timestamp. If `TIME` was requested as a dimension this will be the start of the time bucket. If not specified this is the start time of the query.
          type: string
          format: date-time
          example: '2023-08-03T15:00:00.000Z'
      additionalProperties: false
    QueryResponseRecords:
      description: Query response data.
      type: array
      items:
        $ref: '#/components/schemas/QueryResponseRecord'
    GetConfigResponse:
      type: object
      properties:
        analytics:
          description: Null if analytics is not enabled.
          type: object
          additionalProperties: false
          nullable: true
          properties:
            percentiles:
              description: True if analytics percentiles are enabled.
              type: boolean
            retention_ms:
              description: Analytics retention in milliseconds.
              type: integer
          required:
            - percentiles
            - retention_ms
      additionalProperties: false
      required:
        - analytics
    BaseError:
      description: standard error
      type: object
      properties:
        status:
          description: |
            The HTTP status code of the error. Useful when passing the response
            body to child properties in a frontend UI. Must be returned as an integer.
          type: integer
          readOnly: true
        title:
          description: |
            A short, human-readable summary of the problem. It should not
            change between occurences of a problem, except for localization.
            Should be provided as "Sentence case" for direct use in the UI.
          type: string
          readOnly: true
        type:
          description: The error type.
          type: string
          readOnly: true
        instance:
          description: |
            Used to return the correlation ID back to the user, in the format
            kong:trace:<correlation_id>. This helps us find the relevant logs
            when a customer reports an issue.
          type: string
          readOnly: true
        detail:
          description: |
            A human readable explanation specific to this occurence of the problem.
            This field may contain request/entity data to help the user understand
            what went wrong. Enclose variable values in square brackets. Should be
            provided as "Sentence case" for direct use in the UI.
          type: string
          readOnly: true
      required:
        - status
        - title
        - instance
        - detail
      title: Error
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 403
            title:
              example: Forbidden
            type:
              example: 'https://httpstatuses.com/403'
            instance:
              example: 'kong:trace:1234567890'
            detail:
              example: Forbidden
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 401
            title:
              example: Unauthorized
            type:
              example: 'https://httpstatuses.com/401'
            instance:
              example: 'kong:trace:1234567890'
            detail:
              example: Invalid credentials
    AuthStrategyId:
      description: 'ID of the auth strategy to use for the application. If null or not included, the default application auth strategy will be used.'
      type: string
      format: uuid
      nullable: true
    Scopes:
      description: |-
        **Pre-release Endpoint**
        This endpoint is currently in beta and is subject to change.

        The granted scopes for the application. Will only be included if supported by the application's auth strategy.
      type: array
      items:
        type: string
    CreateCredentialPayload:
      type: object
      properties:
        display_name:
          type: string
          maxLength: 255
      additionalProperties: false
    UpdateCredentialPayload:
      type: object
      properties:
        display_name:
          type: string
          maxLength: 255
      additionalProperties: false
      required:
        - display_name
    ListApplicationsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetApplicationResponse'
      additionalProperties: false
      required:
        - data
        - meta
    GetApplicationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        reference_id:
          $ref: '#/components/schemas/ApplicationReferenceId'
        description:
          type: string
          nullable: true
        redirect_uri:
          type: string
          nullable: true
        auth_strategy:
          $ref: '#/components/schemas/PortalAuthStrategy'
        scopes:
          $ref: '#/components/schemas/Scopes'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
        - name
        - reference_id
        - description
        - updated_at
        - created_at
    ListCredentialsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              id:
                $ref: '#/components/schemas/UUID'
              display_name:
                type: string
            required:
              - id
              - display_name
      additionalProperties: false
      required:
        - data
        - meta
    CredentialCreationResponse:
      type: object
      properties:
        credential:
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        display_name:
          type: string
      additionalProperties: false
      required:
        - credential
        - id
        - display_name
    RefreshTokenResponse:
      description: Refresh token response
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
      additionalProperties: false
      required:
        - client_id
        - client_secret
      title: Refresh token response
    CreateApplicationPayload:
      description: Application creation payload
      type: object
      properties:
        name:
          description: The name of the application
          type: string
          maxLength: 255
        reference_id:
          $ref: '#/components/schemas/ApplicationReferenceId'
        redirect_uri:
          description: URL to redirect to after completing an OIDC auth flow
          type: string
          format: uri
        description:
          description: A brief description of the application
          type: string
          maxLength: 255
        auth_strategy_id:
          $ref: '#/components/schemas/AuthStrategyId'
        scopes:
          $ref: '#/components/schemas/Scopes'
      additionalProperties: false
      required:
        - name
      title: CreateApplicationPayload
    ApplicationCreationResponse:
      description: Application creation response payload
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        reference_id:
          $ref: '#/components/schemas/ApplicationReferenceId'
        description:
          type: string
          nullable: true
        redirect_uri:
          type: string
          nullable: true
        credentials:
          type: object
          additionalProperties: false
          properties:
            client_id:
              type: string
            client_secret:
              type: string
          required:
            - client_id
            - client_secret
        auth_strategy:
          $ref: '#/components/schemas/PortalAuthStrategy'
        scopes:
          $ref: '#/components/schemas/Scopes'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
        - name
        - reference_id
        - description
        - created_at
        - updated_at
        - auth_strategy
      title: ApplicationCreationResponse
    UpdateApplicationPayload:
      description: Payload required to update an application
      type: object
      properties:
        name:
          description: The name of the application
          type: string
          maxLength: 255
        reference_id:
          $ref: '#/components/schemas/ApplicationReferenceId'
        redirect_uri:
          description: URL to redirect to after completing an OIDC auth flow
          type: string
          format: uri
        description:
          description: A brief description of the application
          type: string
          maxLength: 255
        scopes:
          $ref: '#/components/schemas/Scopes'
      additionalProperties: false
      title: UpdateApplicationPayload
    ApplicationUpdateResponse:
      description: Application update response payload
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        reference_id:
          $ref: '#/components/schemas/ApplicationReferenceId'
        description:
          type: string
          example: A brief description of the application
          nullable: true
        redirect_uri:
          type: string
          example: 'https://example.com/callback'
          nullable: true
        auth_strategy:
          $ref: '#/components/schemas/PortalAuthStrategy'
        scopes:
          $ref: '#/components/schemas/Scopes'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
        - name
        - reference_id
        - description
        - updated_at
        - created_at
      title: ApplicationUpdateResponse
    GetGrantedScopesProductVersionResponse:
      type: object
      properties:
        scopes:
          $ref: '#/components/schemas/RefreshedGrantedScopes'
      additionalProperties: false
      required:
        - scopes
    ListAuthStrategiesResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PortalAuthStrategy'
      additionalProperties: false
      required:
        - data
        - meta
    PageMeta:
      description: Contains pagination query parameters and the total number of objects returned.
      type: object
      properties:
        number:
          type: number
          example: 1
        size:
          type: number
          example: 10
        total:
          type: number
          example: 100
      required:
        - number
        - size
        - total
    PaginatedMeta:
      description: returns the pagination information
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageMeta'
      required:
        - page
      title: PaginatedMeta
    UUID:
      description: Contains a unique identifier used by the API for this resource.
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      readOnly: true
    ApplicationReferenceId:
      description: |
        An identifier to correlate the application with an external system.
        Cannot be set when using Dynamic Client Registration.
      type: string
      maxLength: 255
    PortalAuthStrategyKeyAuth:
      description: KeyAuth Auth strategy that the application uses.
      type: object
      properties:
        id:
          description: The Application Auth Strategy ID.
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          readOnly: true
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - key_auth
        key_names:
          type: array
          items:
            type: string
          example:
            - apikey
      required:
        - id
        - name
        - credential_type
        - key_names
    AvailableScopes:
      description: Possible developer selectable scopes for an application. Only present when using DCR Provider that supports it.
      type: array
      items:
        type: string
      example:
        - scope1
        - scope2
    AuthMethods:
      type: array
      items:
        description: Auth Methods enabled for this strategy
        type: string
      example:
        - bearer
    PortalAuthStrategyClientCredentials:
      description: Client Credential Auth strategy that the application uses.
      type: object
      properties:
        id:
          description: The Application Auth Strategy ID.
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          readOnly: true
        available_scopes:
          $ref: '#/components/schemas/AvailableScopes'
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - client_credentials
            - self_managed_client_credentials
        auth_methods:
          $ref: '#/components/schemas/AuthMethods'
      required:
        - id
        - name
        - credential_type
        - auth_methods
    PortalAuthStrategy:
      type: object
      discriminator:
        propertyName: credential_type
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/PortalAuthStrategyKeyAuth'
        - $ref: '#/components/schemas/PortalAuthStrategyClientCredentials'
    CreatedAt:
      description: An ISO-8601 timestamp representation of entity creation date.
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      readOnly: true
    UpdatedAt:
      description: An ISO-8601 timestamp representation of entity update date.
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      readOnly: true
    InvalidRules:
      description: invalid parameters rules
      type: string
      enum:
        - required
        - max_length
        - is_array
        - is_base64
        - is_boolean
        - is_date_time
        - is_integer
        - is_null
        - is_number
        - is_object
        - is_string
        - is_uuid
        - is_fqdn
        - is_arn
        - unknown_property
        - is_label
        - matches_regex
        - invalid
        - is_supported_network_availability_zone_list
        - is_supported_network_cidr_block
        - is_supported_provider_region
      nullable: true
      readOnly: true
    InvalidParameterStandard:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          $ref: '#/components/schemas/InvalidRules'
        source:
          type: string
          example: body
        reason:
          type: string
          example: is a required field
          readOnly: true
      additionalProperties: false
      required:
        - field
        - reason
    InvalidParameterMinimumLength:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          enum:
            - min_length
            - min_digits
            - min_lowercase
            - min_uppercase
            - min_symbols
          nullable: false
          readOnly: true
        minimum:
          type: integer
          example: 8
        source:
          type: string
          example: body
        reason:
          type: string
          example: is a required field
          readOnly: true
      additionalProperties: false
      required:
        - field
        - reason
        - rule
        - minimum
    InvalidParameterChoiceItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          enum:
            - enum
          nullable: false
          readOnly: true
        reason:
          type: string
          example: is a required field
          readOnly: true
        choices:
          type: array
          items: {}
          minItems: 1
          nullable: false
          readOnly: true
          uniqueItems: true
        source:
          type: string
          example: body
      additionalProperties: false
      required:
        - field
        - reason
        - rule
        - choices
    InvalidParameterDependentItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          enum:
            - dependent_fields
          nullable: true
          readOnly: true
        reason:
          type: string
          example: is a required field
          readOnly: true
        dependents:
          type: array
          items: {}
          nullable: true
          readOnly: true
          uniqueItems: true
        source:
          type: string
          example: body
      additionalProperties: false
      required:
        - field
        - rule
        - reason
        - dependents
    InvalidParameters:
      description: invalid parameters
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/InvalidParameterStandard'
          - $ref: '#/components/schemas/InvalidParameterMinimumLength'
          - $ref: '#/components/schemas/InvalidParameterChoiceItem'
          - $ref: '#/components/schemas/InvalidParameterDependentItem'
      minItems: 1
      nullable: false
      uniqueItems: true
    BadRequestError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          required:
            - invalid_parameters
          properties:
            invalid_parameters:
              $ref: '#/components/schemas/InvalidParameters'
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 404
            title:
              example: Not Found
            type:
              example: 'https://httpstatuses.com/404'
            instance:
              example: 'kong:trace:1234567890'
            detail:
              example: Not found
    ConflictError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 409
            title:
              example: Conflict
            type:
              example: 'https://httpstatuses.com/409'
            instance:
              example: 'kong:trace:1234567890'
            detail:
              example: Conflict
    TooManyRequestsError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 429
            title:
              example: Too Many Requests
            type:
              example: 'https://httpstatuses.com/429'
            instance:
              example: 'kong:trace:1234567890'
            detail:
              example: Too Many Requests
    RefreshedGrantedScopes:
      description: 'List of granted scopes, directly updated from the IDP'
      type: array
      items:
        type: string
    UnprocessableContentError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 422
            title:
              example: Unprocessable Content
            type:
              example: 'https://httpstatuses.com/422'
            instance:
              example: 'kong:trace:1234567891'
            detail:
              example: Unprocessable Content
    AuthenticateRequest:
      description: The request schema for the authenticate endpoint.
      type: object
      properties:
        username:
          type: string
          format: email
          example: developer@example.com
          writeOnly: true
        password:
          type: string
          format: password
          example: <!N0taP@$$w0rd!>
          writeOnly: true
      example:
        username: developer@example.com
        password: <!N0taP@$$w0rd!>
      additionalProperties: false
      required:
        - username
        - password
      title: AuthenticateRequest
    ResetPasswordRequest:
      description: The request schema for the reset password endpoint.
      type: object
      properties:
        password:
          type: string
          format: password
          example: <!N0taP@$$w0rd!>
          writeOnly: true
        token:
          type: string
          format: uuid
          example: c8efd006-d8e1-4743-b91b-f163b9eae06a
          writeOnly: true
      example:
        password: <!D3finitelyN0taP@$$w0rd!>
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
      additionalProperties: false
      required:
        - password
        - token
      title: ResetPasswordRequest
    VerifyEmailRequest:
      description: The request schema for the verify email endpoint.
      type: object
      properties:
        token:
          type: string
          format: uuid
          example: c8efd006-d8e1-4743-b91b-f163b9eae06a
          writeOnly: true
      example:
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
      additionalProperties: false
      required:
        - token
      title: VerifyEmailRequest
    VerifyEmailResponse:
      description: The response schema for the verify email endpoint.
      type: object
      properties:
        email:
          type: string
          format: email
          example: developer@example.com
          readOnly: true
        token:
          type: string
          format: uuid
          example: c8efd006-d8e1-4743-b91b-f163b9eae06a
          readOnly: true
      example:
        email: developer@example.com
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
      additionalProperties: false
      title: VerifyEmailResponse
    GoneError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 410
            title:
              example: Gone
            type:
              example: 'https://httpstatuses.com/410'
            instance:
              example: 'kong:trace:1234567890'
            detail:
              example: Gone
    Developer:
      description: A user who can use a developer portal
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        email:
          type: string
          format: email
          example: developer@email.com
          maxLength: 250
        full_name:
          type: string
          example: API Developer
          maxLength: 250
          pattern: '^[\w \W]+$'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - full_name
        - email
      title: Developer
    RegisterPayload:
      description: |
        Payload required to be sent to register a developer to the
        portal.
      type: object
      properties:
        email:
          type: string
          format: email
          example: developer@konghq.com
        full_name:
          type: string
          example: Jane Doe
          maxLength: 256
          minLength: 1
      additionalProperties: true
      required:
        - full_name
        - email
      title: register payload
    ResetPasswordPayload:
      description: |
        Payload required to start the reset password flow
      type: object
      properties:
        email:
          type: string
          format: email
          example: developer@konghq.com
      additionalProperties: false
      required:
        - email
      title: reset password payload
    PortalAppearance:
      description: the portal appearance
      type: object
      properties:
        variables:
          type: object
          properties:
            catalog:
              type: object
              properties:
                logo:
                  type: object
                  properties:
                    url:
                      type: string
                cover:
                  type: object
                  properties:
                    url:
                      type: string
                primary_header:
                  type: object
                  properties:
                    text:
                      type: string
                welcome_message:
                  type: object
                  properties:
                    text:
                      type: string
        stylesheets:
          type: object
          properties:
            global:
              type: object
              properties:
                main:
                  type: object
                  properties:
                    data:
                      type: object
      additionalProperties: false
      title: Portal Appearance
    PortalContext:
      description: describe the portal execution context
      type: object
      properties:
        portal_id:
          type: string
          format: uuid
        org_id:
          type: string
          format: uuid
        featureset_id:
          type: string
        feature_set:
          description: String that determines feature set group developer belongs to when logged in
          type: string
        basic_auth_enabled:
          description: Whether the portal can be accessed via email and password
          type: boolean
        oidc_auth_enabled:
          description: Whether the portal can be accessed via authentication with Single Sign On (SSO) through OpenID Connect (OIDC) from a third-party Identity Provider
          type: boolean
        is_public:
          description: Whether the portal catalog can be accessed by non-authenticated users
          type: boolean
        rbac_enabled:
          description: Whether the portal is protected with Role-Based Access Control
          type: boolean
        dcr_provider_ids:
          description: The unique identifiers of each available client provider when using Dynamic Client Registration
          type: array
          items:
            type: string
            format: uuid
        allowed_time_period:
          description: Allowed time period for Analytics queries
          type: string
        name:
          description: Name of the developer portal.
          type: string
        canonical_domain:
          description: The canonical domain of the developer portal.
          type: string
      additionalProperties: false
      required:
        - canonical_domain
        - portal_id
        - org_id
        - is_public
        - featureset_id
        - basic_auth_enabled
        - oidc_auth_enabled
        - rbac_enabled
        - dcr_provider_ids
        - allowed_time_period
        - name
      title: Portal Context
    ProductActionsResponse:
      type: object
      properties:
        actions:
          description: List of actions that can be performed on the API Product
          type: object
          additionalProperties: false
          properties:
            view:
              type: boolean
            register:
              type: boolean
            view_documentation:
              type: boolean
          required:
            - view
            - register
            - view_documentation
      example:
        actions:
          view: true
          register: false
          view_documentation: true
      additionalProperties: false
      required:
        - actions
      title: Product Actions Response
    Product:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        name:
          description: Name of product.
          type: string
          example: Billing
        description:
          type: string
          example: API for billing functions
          nullable: true
        document_count:
          description: Number of linked documents in documentation.
          type: integer
          example: 3
          readOnly: true
        version_count:
          description: Number of published versions.
          type: integer
          example: 2
          readOnly: true
        latest_version:
          $ref: '#/components/schemas/LatestVersion'
      additionalProperties: false
      required:
        - id
        - created_at
        - updated_at
        - name
      title: Product
    ProductListPage:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
      title: ProductListPage
    ProductVersion:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        name:
          description: Name of product version.
          type: string
          example: v2.0.0
        deprecated:
          description: 'If true, product version is deprecated.'
          type: boolean
        registration_configs:
          description: Configurations for how the product version is able to be registered for by applications.
          type: array
          items:
            $ref: '#/components/schemas/RegistrationConfiguration'
      additionalProperties: false
      required:
        - id
        - created_at
        - updated_at
        - name
        - deprecated
        - registration_configs
    RegistrationConfiguration:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        auth_methods:
          type: array
          items:
            description: Auth Methods enabled for this strategy
            type: string
          example:
            - bearer
        credential_type:
          $ref: '#/components/schemas/CredentialType'
        name:
          type: string
        available_scopes:
          $ref: '#/components/schemas/AvailableScopes'
        registration_enabled:
          description: 'If true, application registration is allowed for this configuration.'
          type: boolean
          example: true
        registration_auto_approve:
          description: 'If true, applications are automatically approved for registration.'
          type: boolean
          example: false
      additionalProperties: false
      required:
        - id
        - name
        - credential_type
        - registration_enabled
        - registration_auto_approve
    CredentialType:
      type: string
      enum:
        - client_credentials
        - self_managed_client_credentials
        - key_auth
    LatestVersion:
      type: object
      properties:
        name:
          type: string
          example: v2.0.0
          readOnly: true
        id:
          $ref: '#/components/schemas/UUID'
      additionalProperties: false
      nullable: true
    ProductVersionListPage:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductVersion'
      additionalProperties: false
      required:
        - meta
        - data
      title: ProductVersionListPage
    ProductVersionListApplicationsPage:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductVersionApplication'
      additionalProperties: false
      required:
        - meta
        - data
      title: ProductVersionListApplicationsPage
    ProductVersionApplication:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          description: The name of the application
          type: string
        registration_id:
          $ref: '#/components/schemas/NullableUUID'
        registration_status:
          type: string
          enum:
            - approved
            - pending
            - rejected
            - revoked
          nullable: true
        auth_strategy:
          $ref: '#/components/schemas/AuthStrategy'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
        - name
        - created_at
        - updated_at
        - registration_status
        - registration_id
      title: ProductVersionApplication
    ProductVersionSpecDocument:
      description: API specification document for a product version.
      type: object
      properties:
        api_type:
          $ref: '#/components/schemas/ApiTypeEnum'
        content:
          type: string
      required:
        - api_type
        - content
      title: ProductVersionSpecDocument
    ProductVersionSpecOperations:
      description: List of every operation detailed in a product version spec document.
      type: object
      properties:
        api_type:
          $ref: '#/components/schemas/ApiTypeEnum'
        operations:
          type: array
          items:
            type: object
            required:
              - path
              - method
              - operation_id
              - tags
              - summary
              - deprecated
            properties:
              path:
                type: string
                example: /pet
              method:
                type: string
                example: post
              operation_id:
                type: string
                example: addPet
                nullable: true
              tags:
                type: array
                items:
                  type: string
                  example: pet
              summary:
                type: string
                example: Add a new Pet to the store
                nullable: true
              deprecated:
                type: boolean
      required:
        - api_type
        - operations
      title: ProductVersionSpecOperations
    ApiTypeEnum:
      type: string
      enum:
        - openapi
    ProductDocument:
      description: A document for a product. This is a document that is not a part of the API specification.
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Contains a unique identifier used by the DocumentHub service for this resource.
              type: string
        parent_document_id:
          description: Contains a unique identifier used by the DocumentHub service for this resource.
          type: string
          format: uuid
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          nullable: true
        slug:
          description: Slug of the document. This is used in the URL to identify the document.
          type: string
          example: getting-started
        content:
          $ref: '#/components/schemas/DocumentBlock'
        title:
          description: Title of the document. This is used in the Portal UI to identify the document.
          type: string
          example: Hello World
      required:
        - id
        - slug
        - title
        - content
      title: ProductDocument
    ProductDocumentRaw:
      description: A document for a product. This is a document that is not a part of the API specification.
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Contains a unique identifier used by the DocumentHub service for this resource.
              type: string
        parent_document_id:
          description: Contains a unique identifier used by the DocumentHub service for this resource.
          type: string
          format: uuid
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          nullable: true
        slug:
          description: Slug of the document. This is used in the URL to identify the document.
          type: string
          example: getting-started
        content:
          description: Markdown document
          example: |
            # My Kong api

            This api is powered by Konnect
          type: string
        title:
          description: Title of the document. This is used in the Portal UI to identify the document.
          type: string
          example: Hello World
      required:
        - id
        - slug
        - title
        - content
      title: ProductDocumentRaw
    NullableUUID:
      description: Contains a unique identifier for a resource.
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      nullable: true
    AuthStrategyKeyAuth:
      description: KeyAuth Auth strategy that the application uses.
      type: object
      properties:
        id:
          description: The Application Auth Strategy ID.
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          readOnly: true
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - key_auth
      required:
        - id
        - name
        - credential_type
    AuthStrategyClientCredentials:
      description: Client Credential Auth strategy that the application uses.
      type: object
      properties:
        id:
          description: The Application Auth Strategy ID.
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          readOnly: true
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - client_credentials
            - self_managed_client_credentials
        auth_methods:
          $ref: '#/components/schemas/AuthMethods'
      required:
        - id
        - name
        - credential_type
        - auth_methods
    AuthStrategy:
      type: object
      discriminator:
        propertyName: credential_type
      oneOf:
        - $ref: '#/components/schemas/AuthStrategyKeyAuth'
        - $ref: '#/components/schemas/AuthStrategyClientCredentials'
    DocumentContentTypeEnum:
      type: string
      default: application/json
      enum:
        - application/json
        - application/vnd.konnect.document-tree+json
    Metadata:
      description: Contains key value pairs information about entity's metadata.
      type: object
      example:
        owner: John Appleseed
      additionalProperties: true
    DocumentItem:
      type: object
      properties:
        id:
          description: the id of the document
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        parent_document_id:
          description: the id of the parent document
          type: string
          format: uuid
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          nullable: true
        slug:
          description: the slug of the document
          type: string
          example: getting-started
        title:
          description: the title of the document
          type: string
          example: Getting Started
        metadata:
          $ref: '#/components/schemas/Metadata'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
        - parent_document_id
        - slug
        - title
        - metadata
        - created_at
        - updated_at
      title: Document item
    ListDocuments:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
      additionalProperties: false
      required:
        - meta
        - data
    DocumentTree:
      description: a document tree
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        parent_document_id:
          type: string
          format: uuid
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          nullable: true
        title:
          description: the title of the document
          type: string
          example: Getting Started
        slug:
          description: the slug of the document
          type: string
          example: getting-started
        metadata:
          $ref: '#/components/schemas/Metadata'
        children:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTree'
      required:
        - id
        - title
        - slug
        - metadata
        - children
      title: DocumentTree
    ListDocumentsTree:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTree'
      required:
        - meta
        - data
    DocumentFormatContentTypeEnum:
      type: string
      default: application/json
      enum:
        - text/markdown
        - application/json
        - application/vnd.konnect.document-nodes+json
    NodeChildren:
      description: List of children nodes of the current node
      type: array
      items:
        $ref: '#/components/schemas/ChildNode'
    HeadingBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - heading
        level:
          description: Level of the heading which maps to HTML <h> tag
          type: number
          maximum: 6
          minimum: 1
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    BlockQuoteBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - blockquote
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    ParagraphBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - paragraph
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    TextBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - text_block
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    BreakBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - break
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    CodeBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - code_block
        lang:
          type: string
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    ListBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - list
        isOrdered:
          description: Defines if the list is ordered or not
          type: boolean
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    ListItemBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - list_item
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    Text:
      type: object
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string
        hardBreak:
          description: |
            If this property is true the end of this block should
            be a carriage return and not concatenated to the next Text block.
          type: boolean
        softBreak:
          description: |
            If this property is true the end of this block should should be
            concatenated with a space caracter before the next block. This is
            the flag showing that the parsed markdown block was at the end of
            the line.
          type: boolean
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    Emphasis:
      type: object
      properties:
        type:
          type: string
          enum:
            - emphasis
        level:
          description: |
            Level of emphasis
            1 - italic
            2 - bold
          type: number
          maximum: 2
          minimum: 1
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    Code:
      type: object
      properties:
        type:
          type: string
          enum:
            - code
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    Link:
      type: object
      properties:
        type:
          type: string
          enum:
            - link
        href:
          description: Target url of the link
          type: string
        title:
          description: Title of the link
          type: string
      required:
        - type
    Image:
      type: object
      properties:
        type:
          type: string
          enum:
            - image
        url:
          description: Url of the image
          type: string
        alt:
          description: Alternate tag of the image
          type: string
        title:
          description: Title of the image
          type: string
      required:
        - type
    StrikeThrough:
      type: object
      properties:
        type:
          type: string
          enum:
            - strikethrough
      required:
        - type
    AlignmentKind:
      type: string
      enum:
        - left
        - right
        - center
        - none
    TableAlignments:
      type: array
      items:
        $ref: '#/components/schemas/AlignmentKind'
      nullable: true
    TableBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - table
        alignments:
          $ref: '#/components/schemas/TableAlignments'
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
        - alignments
    TableHeaderBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - table_header
        alignments:
          $ref: '#/components/schemas/TableAlignments'
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
        - alignments
    TableCellBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - table_cell
        alignment:
          $ref: '#/components/schemas/AlignmentKind'
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
    TableRowBlock:
      type: object
      properties:
        type:
          type: string
          enum:
            - table_row
        alignments:
          $ref: '#/components/schemas/TableAlignments'
        children:
          $ref: '#/components/schemas/NodeChildren'
      required:
        - type
        - alignments
    TaskCheckbox:
      type: object
      properties:
        type:
          type: string
          enum:
            - task_checkbox
        checked:
          description: State of the checkbox
          type: boolean
      required:
        - checked
        - type
    ChildNode:
      type: object
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/HeadingBlock'
        - $ref: '#/components/schemas/BlockQuoteBlock'
        - $ref: '#/components/schemas/ParagraphBlock'
        - $ref: '#/components/schemas/TextBlock'
        - $ref: '#/components/schemas/BreakBlock'
        - $ref: '#/components/schemas/CodeBlock'
        - $ref: '#/components/schemas/ListBlock'
        - $ref: '#/components/schemas/ListItemBlock'
        - $ref: '#/components/schemas/Text'
        - $ref: '#/components/schemas/Emphasis'
        - $ref: '#/components/schemas/Code'
        - $ref: '#/components/schemas/Link'
        - $ref: '#/components/schemas/Image'
        - $ref: '#/components/schemas/StrikeThrough'
        - $ref: '#/components/schemas/TableBlock'
        - $ref: '#/components/schemas/TableHeaderBlock'
        - $ref: '#/components/schemas/TableCellBlock'
        - $ref: '#/components/schemas/TableRowBlock'
        - $ref: '#/components/schemas/TaskCheckbox'
    DocumentBlock:
      description: content of the document
      type: object
      properties:
        type:
          type: string
          enum:
            - document
        version:
          type: string
        children:
          $ref: '#/components/schemas/NodeChildren'
      example:
        type: document
        content:
          - type: paragraph
            content:
              - text: Hello World
                type: text
      required:
        - type
    CreateRegistrationPayload:
      description: The payload to create a registration.
      type: object
      properties:
        product_version_id:
          description: The product version id required for registration.
          type: string
          format: uuid
        scopes:
          description: 'The requested scopes for the registration, requires developer_managed_scopes to be enabled.'
          type: array
          items:
            type: string
      additionalProperties: false
      required:
        - product_version_id
      title: CreateRegistrationPayload
    ListRegistrationsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetRegistrationResponse'
      additionalProperties: false
      required:
        - data
        - meta
    GetRegistrationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        status:
          description: The approval status of the registration.
          type: string
          enum:
            - approved
            - pending
            - rejected
            - revoked
        product_id:
          description: Contains a unique identifier used by the Portal API for this resource.
          type: string
          format: uuid
        product_name:
          description: The name of the product. This is the name that is displayed in the developer portal.
          type: string
        product_version_id:
          description: Contains a unique identifier used by the Portal API for this resource.
          type: string
          format: uuid
        product_version_name:
          description: The name of the product version. This is the version label that is displayed in the developer portal.
          type: string
        application_id:
          description: Contains a unique identifier used by the Portal API for this resource.
          type: string
          format: uuid
        granted_scopes:
          description: |
            Cached list of scopes granted for the given application registration.
            Use `/api/v2/applications/{applicationId}/registrations/{registrationId}/granted-scopes` to get up to date granted scopes from the IDP.
            This property will be omitted if not supported by the application.
          type: array
          items:
            type: string
          deprecated: true
      additionalProperties: false
      required:
        - id
        - status
        - application_id
        - product_id
        - product_name
        - product_version_id
        - product_version_name
        - created_at
        - updated_at
    GetGrantedScopesResponse:
      type: object
      properties:
        scopes:
          $ref: '#/components/schemas/RefreshedGrantedScopes'
      additionalProperties: false
      required:
        - scopes
    SearchResults:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          description: The paginated results that matched the search query
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              index:
                $ref: '#/components/schemas/SearchIndicesParameters'
              source:
                $ref: '#/components/schemas/ProductCatalogIndexSource'
            required:
              - index
              - source
      additionalProperties: false
      required:
        - data
        - meta
      title: SearchResults
    ProductCatalogIndexSource:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          description: the name of the product
          type: string
          example: Nice Product
          nullable: true
          readOnly: true
        description:
          description: a description of the product
          type: string
          example: A nice product for customers to read about and consume
          nullable: true
          readOnly: true
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        document_count:
          description: Number of product documents available.
          type: number
          example: 5
          readOnly: true
        version_count:
          description: Number of product versions.
          type: number
          example: 2
          readOnly: true
        latest_version:
          description: Last created version.
          type: object
          additionalProperties: false
          nullable: true
          properties:
            name:
              description: Name of product version.
              type: string
              example: v2.0.0
            id:
              $ref: '#/components/schemas/UUID'
          required:
            - name
            - id
      additionalProperties: false
      required:
        - id
        - created_at
        - updated_at
        - name
        - document_count
        - version_count
        - latest_version
      title: ProductCatalogIndexSource
    SearchIndicesParameters:
      type: string
      enum:
        - product-catalog
      title: SearchIndicesParameters
    SearchQueryParameters:
      type: string
      title: SearchQueryParameters
    SearchJoinParameters:
      description: Accepted values are `versions` and `versions.documents`. Use commas to separate multiple values.
      type: string
      example: 'versions,versions.documents'
      title: SearchJoinParameters
  examples:
    ResponseExampleWithMetricAndDimension:
      value:
        meta:
          dimensions:
            APPLICATION:
              - Application 1
              - Application 2
          metric_names:
            - RESPONSE_LATENCY_P99
          metric_units:
            RESPONSE_LATENCY_P99: ms
          start_ms: 1691074800000
          end_ms: 1691161200000
          granularity: 86400000
          truncated: false
          query_id: portal-api-3c0abb98-90bd-4e80-a495-ac268acc493e
        records:
          - event:
              APPLICATION: Application 1
              RESPONSE_LATENCY_P99: 250
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              APPLICATION: Application 2
              RESPONSE_LATENCY_P99: 740
            timestamp: '2023-08-03T15:00:00.000Z'
    ResponseExampleWithMetric:
      value:
        meta:
          dimensions: {}
          metric_names:
            - REQUEST_PER_MINUTE
          metric_units:
            REQUEST_PER_MINUTE: count/minute
          start_ms: 1691158080000
          end_ms: 1691158980000
          granularity: 900000
          truncated: false
          query_id: portal-api-3c0abb98-90bd-4e80-a495-ac268acc493e
        records:
          - event:
              REQUEST_PER_MINUTE: 1340.8666666666666
            timestamp: '2023-08-04T14:08:00.000Z'
    ResponseExampleWithMetricAndMultipleDimensions:
      value:
        meta:
          start_ms: 1691074800000
          end_ms: 1691082000000
          granularity: 7200000
          query_id: portal-api-4fad296e-da5e-41ed-af86-191440fe448e
          metric_names:
            - REQUEST_COUNT
          metric_units:
            REQUEST_COUNT: count
          dimensions:
            APPLICATION:
              - GetMeAKongApplication926
            STATUS_CODE_GROUPED:
              - 2XX
              - 3XX
          truncated: false
        records:
          - event:
              APPLICATION: Application 1
              STATUS_CODE_GROUPED: 2XX
              REQUEST_COUNT: 81447
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              APPLICATION: Application 1
              STATUS_CODE_GROUPED: 5XX
              REQUEST_COUNT: 28468
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              APPLICATION: Application 2
              STATUS_CODE_GROUPED: 2XX
              REQUEST_COUNT: 45819
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              APPLICATION: Application 2
              STATUS_CODE_GROUPED: 5XX
              REQUEST_COUNT: 25041
            timestamp: '2023-08-03T15:00:00.000Z'
    ResponseExampleWithTimeDimension:
      value:
        meta:
          start_ms: 1691074800000
          end_ms: 1691082000000
          granularity: 3600000
          query_id: portal-api-3c0abb98-90bd-4e80-a495-ac268acc493e
          metric_names:
            - RESPONSE_SIZE_P99
          metric_units:
            RESPONSE_SIZE_P99: bytes
          dimensions:
            STATUS_CODE_GROUPED:
              - 2XX
              - 3XX
              - 4XX
              - 5XX
          truncated: false
        records:
          - event:
              STATUS_CODE_GROUPED: 2XX
              RESPONSE_SIZE_P99: 590
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              STATUS_CODE_GROUPED: 3XX
              RESPONSE_SIZE_P99: 584
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              STATUS_CODE_GROUPED: 4XX
              RESPONSE_SIZE_P99: 629
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              STATUS_CODE_GROUPED: 5XX
              RESPONSE_SIZE_P99: 603
            timestamp: '2023-08-03T15:00:00.000Z'
          - event:
              STATUS_CODE_GROUPED: 2XX
              RESPONSE_SIZE_P99: 590
            timestamp: '2023-08-03T16:00:00.000Z'
          - event:
              STATUS_CODE_GROUPED: 3XX
              RESPONSE_SIZE_P99: 584
            timestamp: '2023-08-03T16:00:00.000Z'
          - event:
              STATUS_CODE_GROUPED: 4XX
              RESPONSE_SIZE_P99: 628
            timestamp: '2023-08-03T16:00:00.000Z'
          - event:
              STATUS_CODE_GROUPED: 5XX
              RESPONSE_SIZE_P99: 603
            timestamp: '2023-08-03T16:00:00.000Z'
    QueryExampleWithMetric:
      value:
        start_ms: 1691158080000
        end_ms: 1691158980000
        metrics:
          - REQUEST_PER_MINUTE
        filter:
          - dimension: API_PRODUCT_VERSION
            type: IN
            values:
              - 417e47e8-ae7b-48a1-9b34-3f6835161de1
    QueryExampleWithMetricAndDimension:
      value:
        start_ms: 1691074800000
        end_ms: 1691161200000
        metrics:
          - RESPONSE_LATENCY_P99
        dimensions:
          - APPLICATION
    QueryExampleWithMetricAndMultipleDimensions:
      value:
        start_ms: 1691074800000
        end_ms: 1691082000000
        metrics:
          - REQUEST_COUNT
        dimensions:
          - APPLICATION
          - STATUS_CODE_GROUPED
        filter:
          - dimension: STATUS_CODE_GROUPED
            type: IN
            values:
              - 2XX
              - 5XX
    QueryExampleWithTimeDimension:
      value:
        start_ms: 1691074800000
        end_ms: 1691082000000
        granularity_ms: 3600000
        metrics:
          - RESPONSE_SIZE_P99
        dimensions:
          - TIME
          - STATUS_CODE_GROUPED
    BadRequestExample:
      value:
        status: 400
        title: Bad Request
        instance: 'kong:trace:9039922446017540182'
        detail: 'Malformed Query: dimension API_PRODUCT is not allowed'
        invalid_parameters: []
    UnauthorizedExample:
      value:
        status: 401
        title: Unauthorized
        instance: 'kong:trace:8347343766220159418'
        detail: Unauthorized
        invalid_parameters: []
    GetConfigNoAnalytics200response:
      value:
        analytics: null
    GetConfigAnalytics200response:
      value:
        analytics:
          percentiles: true
          retention_ms: 31536000000
    ForbiddenExample:
      value:
        status: 403
        title: Forbidden
        instance: 'kong:trace:2723154947768991354'
        detail: You do not have permission to perform this action
    GetGrantedScopesProductVersion200Response:
      value:
        scopes:
          - openid
    GetGrantedScopesProductVersion422Example:
      value:
        status: 422
        title: Unsupported IDP
        type: 'https://kongapi.info/konnect/portal/granted-scopes-unavailable'
        detail: This feature is not supported by the application.
        instance: 'kong:trace:2724154947768991354'
    PostCredentials403Example:
      value:
        status: 403
        title: Forbidden
        detail: 'Maximum number of Credentials exceeded. Max Allowed: 20'
        instance: 'kong:trace:2724154947768991355'
    NotFoundExample:
      value:
        status: 404
        title: Not Found
        instance: 'kong:trace:6816496025408232265'
        detail: Not Found
    Authenticate-Request:
      value:
        username: developer@example.com
        password: <!N0taP@$$w0rd!>
    Reset-Password-Request:
      value:
        password: <!D3finitelyN0taP@$$w0rd!>
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
    Verify-Email-Request:
      value:
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
    Verify-Email-Response:
      value:
        email: developer@example.com
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
    400-Invalid-Token:
      value:
        status: 400
        title: Bad Request
        instance: 'konnect:trace:8988732526256293040'
        detail: The provided token is invalid
        invalid_parameters:
          - field: token
            reason: invalid ID format
    400-Login-Failed:
      value:
        status: 400
        title: Bad Request
        instance: 'konnect:trace:8988732526256293040'
        detail: Required fields are missing
        invalid_parameters:
          - field: password
            reason: is required
    401-Unauthorized:
      value:
        status: 401
        title: Invalid Credentials
        instance: 'konnect:trace:7283332526256293094'
        detail: You have entered an invalid email or password.
    401-Account-Not-Approved:
      value:
        status: 401
        title: Approval Required
        instance: 'konnect:trace:7283332526256293094'
        detail: Your account is pending approval for access.
    404-Token-Not-Found:
      value:
        status: 400
        title: Not Found
        instance: 'konnect:trace:8988732526256293040'
        detail: The provided token was not found
    410-Expired-Token:
      value:
        status: 410
        title: Gone
        instance: 'konnect:trace:8988732526256293040'
        detail: The token has expired
    RegisterDeveloperRequestExample1:
      value:
        email: dev@company.com
        full_name: Dev Smith
    ProductActionsExample:
      value:
        actions:
          register: false
          view: true
          view_documentation: true
    UnprocessableContentExample:
      value:
        status: 422
        title: Unprocessable Content
        instance: 'kong:trace:8347343766220159419'
        detail: The requested operation cannot be performed with the provided data
    SearchResponseExample:
      value:
        data:
          - index: product-catalog
            source:
              created_at: '2023-01-19T17:41:55.896Z'
              updated_at: '2023-01-20T17:41:55.896Z'
              id: e35b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
              name: Great Product
              description: Great products are built with great care
              document_count: 5
              version_count: 5
              latest_version:
                name: v5
                id: 455b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
        meta:
          page:
            number: 1
            size: 10
            total: 4
  requestBodies:
    CreateApplication:
      description: Create an application
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateApplicationPayload'
    UpdateApplication:
      description: Update an application
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateApplicationPayload'
    CreateCredential:
      description: Create a credential
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCredentialPayload'
    UpdateCredential:
      description: Update a credential
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCredentialPayload'
    AuthenticateRequest:
      description: The request schema for the authenticate endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticateRequest'
          examples:
            Authenticate-Request:
              $ref: '#/components/examples/Authenticate-Request'
    ResetPasswordRequest:
      description: The request schema for the reset password endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPasswordRequest'
          examples:
            ResetPasswordRequest:
              $ref: '#/components/examples/Reset-Password-Request'
    VerifyEmailRequest:
      description: The request schema for the verify email endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyEmailRequest'
          examples:
            VerifyEmailRequest:
              $ref: '#/components/examples/Verify-Email-Request'
    CreateRegistration:
      description: Create an application registration.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRegistrationPayload'
  responses:
    QueryResponse:
      description: A response from an Application Analytics query.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/QueryResponseMeta'
              records:
                $ref: '#/components/schemas/QueryResponseRecords'
            additionalProperties: false
          examples:
            Response with a single metric:
              $ref: '#/components/examples/ResponseExampleWithMetric'
            Response with metric and dimension:
              $ref: '#/components/examples/ResponseExampleWithMetricAndDimension'
            Response with metric and two dimensions:
              $ref: '#/components/examples/ResponseExampleWithMetricAndMultipleDimensions'
            Response with time dimension:
              $ref: '#/components/examples/ResponseExampleWithTimeDimension'
    GetConfig:
      description: Get config
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConfigResponse'
          examples:
            GetConfigNoAnalytics200response:
              $ref: '#/components/examples/GetConfigNoAnalytics200response'
            GetConfigAnalytics200response:
              $ref: '#/components/examples/GetConfigAnalytics200response'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/ForbiddenExample'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
            401-Unauthorized:
              $ref: '#/components/examples/401-Unauthorized'
            401-Account-Not-Approved:
              $ref: '#/components/examples/401-Account-Not-Approved'
    ListApplications:
      description: Get applications response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListApplicationsResponse'
    GetApplication:
      description: Get application response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicationResponse'
    RefreshToken:
      description: Refresh token response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshTokenResponse'
    ListCredentials:
      description: List credentials response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListCredentialsResponse'
    CredentialCreation:
      description: Credential Creation success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CredentialCreationResponse'
    ApplicationCreation:
      description: Application Creation success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationCreationResponse'
    ApplicationUpdate:
      description: Application Update success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationUpdateResponse'
    GetGrantedScopesProductVersion:
      description: Get granted scopes response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetGrantedScopesProductVersionResponse'
          examples:
            GetGrantedScopesProductVersion200Response:
              $ref: '#/components/examples/GetGrantedScopesProductVersion200Response'
    GetGrantedScopesProductVersion422Response:
      description: Get granted with application using unsupported IDP.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnprocessableContentError'
          examples:
            GetGrantedScopesProductVersion422Example:
              $ref: '#/components/examples/GetGrantedScopesProductVersion422Example'
    PostCredentials403Response:
      description: Error returned when the number of credentials exceed the quota.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
          examples:
            PostCredentials403Example:
              $ref: '#/components/examples/PostCredentials403Example'
    ListAuthStrategies:
      description: List auth strategies response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListAuthStrategiesResponse'
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
          examples:
            400-Invalid-Token:
              $ref: '#/components/examples/400-Invalid-Token'
            400-Login-Failed:
              $ref: '#/components/examples/400-Login-Failed'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
          examples:
            NotFoundExample:
              $ref: '#/components/examples/NotFoundExample'
            404-Token-Not-Found:
              $ref: '#/components/examples/404-Token-Not-Found'
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    TooManyRequests:
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsError'
    Gone:
      description: Gone
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/GoneError'
          examples:
            410-Expired-Token:
              $ref: '#/components/examples/410-Expired-Token'
    VerifyEmailResponse:
      description: The response schema for the verify email endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyEmailResponse'
          examples:
            VerifyEmailResponse:
              $ref: '#/components/examples/Verify-Email-Response'
    responses-Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
    MeResponse:
      description: Response from me endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Developer'
    GetPortalLogoResponse:
      description: Logo of the portal. Can be either png or jpg
      content:
        image/jpg:
          schema:
            type: string
            format: binary
        image/png:
          schema:
            type: string
            format: binary
    GetPortalCoverResponse:
      description: Cover of the portal. Can be either png or jpg
      content:
        image/jpg:
          schema:
            type: string
            format: binary
        image/png:
          schema:
            type: string
            format: binary
    GetPortalAppearanceResponse:
      description: portal appearance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAppearance'
    GetPortalContextResponse:
      description: portal context
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalContext'
    ProductActions:
      description: Product actions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductActionsResponse'
          examples:
            Retrieve Product Actions Response:
              $ref: '#/components/examples/ProductActionsExample'
    ProductGet:
      description: Response for a single product's details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    ProductList:
      description: Response for a list of products.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductListPage'
    ProductListVersions:
      description: Paginated list of versions of an API Product.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersionListPage'
    ProductVersionGet:
      description: Product version details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersion'
    ProductVersionListApplications:
      description: Paginated list of applications either registered or not registered for a product version.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersionListApplicationsPage'
    ProductVersionSpecGet:
      description: Product version spec document.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersionSpecDocument'
    ProductVersionSpecOperationsGet:
      description: Product version spec operations.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersionSpecOperations'
    ProductDocumentGet:
      description: Details for a single document for a given product.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductDocumentRaw'
        application/vnd.konnect.document-nodes+json:
          schema:
            $ref: '#/components/schemas/ProductDocument'
    NotAvailable:
      description: Service not available
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BaseError'
    CreateRegistration:
      description: Registration creation response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRegistrationResponse'
    GetRegistration:
      description: Get registration response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRegistrationResponse'
    ListRegistrations:
      description: Get registrations response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListRegistrationsResponse'
    GetGrantedScopes:
      description: Get granted scopes response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetGrantedScopesResponse'
    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnprocessableContentError'
          examples:
            UnprocessableContentExample:
              $ref: '#/components/examples/UnprocessableContentExample'
    SearchResponse:
      description: Search Results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResults'
          examples:
            Search Response Example:
              $ref: '#/components/examples/SearchResponseExample'
  securitySchemes:
    portalAccessToken:
      type: apiKey
      in: cookie
      name: portalaccesstoken
      description: |
        The Developer portal cookie is meant to be used by the Developer API to authenticate with.
tags:
  - name: Application Analytics
    description: The API for querying Application Analytics. Application Analytics is only available for private portals.
  - name: applications
    description: 'The API for Konnect Portal developer applications within a private portal (i.e. requires registration/authentication). When a portal is in `public` mode, all of the described endpoints will return a 404 error. A public portal means that applications and registrations are not available/needed. In this API''s context, "you" and "your" refers to the developer consuming the API.'
  - name: credentials
    description: The API for Konnect Portal developer credentials within a private portal (i.e. requires registration/authentication).
  - name: developer
    description: API for managing a Konnect Portal Developer.
  - name: portal
    description: The API for retrieving details about a single Konnect Portal.
  - name: products
    description: The API for Konnect Portal Products.
  - name: versions
    description: The API for Konnect Portal Product Versions.
  - name: documentation
    description: The API for Konnect Portal Product Documentation.
  - name: registrations
    description: |
      The API for Konnect Portal application registrations. If the portal is public
      all of the described endpoints will return a 404 error
  - name: search
    description: The API for Konnect Portal Search.
x-errors:
  granted-scopes-unavailable:
    description: |
      The IDP used does not support granted scopes.
    resolution: |
      Switch to an IDP that allows you to grant specific scopes.
