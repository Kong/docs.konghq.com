openapi: 3.0.3
info:
  title: Konnect API Products
  version: 2.0.0
  description: The API for Kong Konnect API Products.
  contact:
    name: Kong
    url: https://cloud.konghq.com
servers:
  - url: https://us.api.konghq.com/v2
    description: US Region Base URL
  - url: https://eu.api.konghq.com/v2
    description: EU Region Base URL
  - url: https://au.api.konghq.com/v2
    description: AU Region Base URL
security:
  - personalAccessToken: []
  - systemAccountAccessToken: []
tags:
  - name: API Products
  - name: API Product Documentation
  - name: API Product Versions
  - name: API Product Version Specification
paths:
  /api-products:
    post:
      summary: Create API Product
      description: >
        An API Product packages together associated APIs and their operations,
        backed by thorough documentation,

        with the objective of making API consumption straightforward for
        developers.
      operationId: create-api-product
      responses:
        '201':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductRequest'
    get:
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/APIProductFilters'
        - $ref: '#/components/parameters/APIProductSort'
        - $ref: '#/components/parameters/LabelsFilter'
      summary: List API Products
      description: Returns a collection of API products.
      operationId: get-many-api-product
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                InvalidSortQueryBadRequestExample:
                  $ref: '#/components/examples/InvalidSortQueryNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
  /api-products/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: id
        in: path
        required: true
        description: API product identifier
    get:
      summary: Fetch API product
      description: Returns an API product.
      operationId: get-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
    patch:
      summary: Update an individual API product
      description: Updates an API product.
      operationId: update-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductRequest'
    delete:
      summary: Delete API Product
      description: Removes an individual API product.
      operationId: delete-api-product
      responses:
        '204':
          description: API product was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
  /api-products/{apiProductId}/documents:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
    post:
      summary: Create API Product Document
      description: Creates a document for an API product.
      operationId: create-api-product-document
      responses:
        '201':
          $ref: '#/components/responses/APIProductDocumentResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductDocumentBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/SlugConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductDocumentRequest'
      tags:
        - API Product Documentation
    get:
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      summary: List API Product Documents
      description: Returns a collection of all documents for an API product.
      operationId: get-many-api-product-document
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductDocumentResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                InvalidSortQueryBadRequestExample:
                  $ref: '#/components/examples/InvalidSortQueryBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Documentation
  /api-products/{apiProductId}/documents/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
        name: id
        description: The document identifier related to the API product
        in: path
        required: true
    get:
      summary: Fetch API Product Document
      description: Returns a document for the API product.
      operationId: get-api-product-document
      responses:
        '200':
          $ref: '#/components/responses/APIProductDocumentResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Documentation
    patch:
      summary: Update an API Product Document
      description: Updates a document for an API product.
      operationId: update-api-product-document
      responses:
        '200':
          $ref: '#/components/responses/APIProductDocumentResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductDocumentBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/SlugConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Documentation
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductDocumentRequest'
    delete:
      summary: Delete API Product Documentation
      description: Removes a document from an API product.
      operationId: delete-api-product-document
      responses:
        '204':
          description: Document for the API product was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Documentation
  /api-products/{apiProductId}/product-versions:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API Product ID
        in: path
        required: true
    post:
      summary: Create API Product Version
      description: Creates a version of an API product.
      operationId: create-api-product-version
      responses:
        '201':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductVersionRequest'
    get:
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/APIProductVersionFilters'
        - $ref: '#/components/parameters/APIProductVersionSort'
      summary: List API Product Versions
      description: Returns a collection of all versions for an API product.
      operationId: get-many-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                InvalidSortQueryBadRequestExample:
                  $ref: '#/components/examples/InvalidSortQueryNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
  /api-products/{apiProductId}/product-versions/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: id
        description: The API product version identifier
        in: path
        required: true
    get:
      summary: Fetch API Product Version
      description: Returns a version of an API product.
      operationId: get-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
    patch:
      summary: Update an API Product Version
      description: Updates an API product version.
      operationId: update-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductVersionRequest'
    delete:
      summary: Delete API Product Version
      description: Removes an API product version.
      operationId: delete-api-product-version
      responses:
        '204':
          description: API product version was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
  /api-products/{apiProductId}/product-versions/{productVersionId}/specifications:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: productVersionId
        description: The API product version identifier
        in: path
        required: true
    post:
      summary: Create API Product Version Specification
      description: |
        Creates a specification for a version of an API product.
        **Note:** You can only have one specification for a product version.
      operationId: create-api-product-version-spec
      responses:
        '201':
          $ref: '#/components/responses/APIProductVersionSpecResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionSpecContentBadRequestExample:
                  $ref: >-
                    #/components/examples/APIProductVersionSpecContentBadRequestExample
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/VersionSpecConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Version Specification
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductVersionSpecRequest'
    get:
      summary: Fetch API Product Version Specifications
      description: |
        Returns a list of specification for the version of an API product.
        **Note:** You can only have one specification for a product version.
      operationId: get-many-api-product-version-spec
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductVersionSpecResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Version Specification
  /api-products/{apiProductId}/product-versions/{productVersionId}/specifications/{specificationId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: productVersionId
        description: The API product version identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 742ff9f1-fb89-4aeb-a599-f0e278c7aeaa
        name: specificationId
        description: The API product version specification identifier
        in: path
        required: true
    get:
      summary: Fetch API Product Version Specification
      description: Returns a specification for the version of an API product.
      operationId: get-api-product-version-spec
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionSpecResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Version Specification
    patch:
      summary: Update an API Product Version Specification
      description: Updates a specification from an API product version.
      operationId: update-api-product-version-spec
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionSpecResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionSpecContentBadRequestExample:
                  $ref: >-
                    #/components/examples/APIProductVersionSpecContentBadRequestExample
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/VersionSpecHiddenConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Version Specification
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductVersionSpecRequest'
    delete:
      summary: Delete API Product Version Specification
      description: Removes a specification from a verion of an API product.
      operationId: delete-api-product-version-spec
      responses:
        '204':
          description: >-
            Specification for the version of an API product was deleted
            successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Version Specification
components:
  parameters:
    APIProductFilters:
      name: filter
      description: Filters API Products in the response.
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/APIProductFilterParameters'
      style: deepObject
    APIProductVersionFilters:
      name: filter
      description: Filters API Product Versions in the response.
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/APIProductVersionFilterParameters'
      style: deepObject
    LabelsFilter:
      name: labels
      description: Filters requested resource by associated labels.
      required: false
      in: query
      schema:
        type: string
        example: key:value,keyExists
    APIProductSort:
      name: sort
      description: |
        Sorts a collection of API products. Supported sort attributes are:
          - name
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SortQuery'
    APIProductVersionSort:
      name: sort
      description: >
        Sorts a collection of API products versions. Supported sort attributes
        are:
          - name
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SortQuery'
    PageSize:
      name: page[size]
      description: >-
        The maximum number of items to include per page. The last page of a
        collection may include fewer items.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 10
    PageNumber:
      name: page[number]
      description: Determines which page of the entities to retrieve.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 1
  requestBodies:
    CreateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductDTO'
          examples:
            CreateAPIProductRequestMinimalExample:
              $ref: '#/components/examples/CreateAPIProductRequestMinimalExample'
            CreateAPIProductRequestExample:
              $ref: '#/components/examples/CreateAPIProductRequestExample'
    UpdateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductDTO'
          examples:
            UpdateAPIProductRequestExample:
              $ref: '#/components/examples/UpdateAPIProductRequestExample'
            PublishAPIProductToPortalExample:
              $ref: '#/components/examples/PublishAPIProductToPortalExample'
    CreateAPIProductVersionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductVersionDTO'
          examples:
            UnlinkedAPIProductVersion:
              $ref: >-
                #/components/examples/CreateAPIProductVersionRequestMinimalExample
            LinkedAPIProductVersion:
              $ref: >-
                #/components/examples/CreateLinkedAPIProductVersionRequestExample
    CreateAPIProductVersionSpecRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductVersionSpecDTO'
          examples:
            CreateAPIProductVersionSpecificationRequestExample:
              $ref: >-
                #/components/examples/CreateAPIProductVersionSpecificationRequestExample
    CreateAPIProductDocumentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductDocumentDTO'
          examples:
            CreateAPIProductDocumentRequestMinimalExample:
              $ref: >-
                #/components/examples/CreateAPIProductDocumentRequestMinimalExample
            CreateAPIProductDocumentRequestExample:
              $ref: '#/components/examples/CreateAPIProductDocumentRequestExample'
    UpdateAPIProductVersionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductVersionDTO'
          examples:
            PublishAPIProductVersion:
              $ref: '#/components/examples/PublishApiProductVersionRequestExample'
            LinkAPIProductVersionRequest:
              $ref: '#/components/examples/LinkAPIProductVersionRequestExample'
            UnlinkAPIProductVersionRequest:
              $ref: '#/components/examples/UnlinkAPIProductVersionRequestExample'
            DeprecateAPIProductVersionRequest:
              $ref: '#/components/examples/DeprecateAPIProductVersionRequestExample'
    UpdateAPIProductDocumentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductDocumentDTO'
          examples:
            UpdateAPIProductDocumentAttributes:
              $ref: >-
                #/components/examples/UpdateAPIProductDocumentAttributesRequestExample
            UpdateAPIProductDocumentContent:
              $ref: >-
                #/components/examples/UpdateAPIProductDocumentContentRequestExample
            UpdateAPIProductDocumentAttributesAndContent:
              $ref: >-
                #/components/examples/UpdateAPIProductDocumentAttributesAndContentRequestExample
    UpdateAPIProductVersionSpecRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductVersionSpecDTO'
          examples:
            UpdateAPIProductVersionSpecContentRequest:
              $ref: >-
                #/components/examples/UpdateAPIProductVersionSpecContentRequestExample
            UpdateAPIProductVersionSpecNameRequest:
              $ref: >-
                #/components/examples/UpdateAPIProductVersionSpecNameRequestExample
            UpdateAPIProductVersionSpecRequest:
              $ref: '#/components/examples/UpdateAPIProductVersionSpecRequestExample'
  responses:
    SlugConflict:
      description: Conflict - `slug` property must be unique
      content:
        application/problem+json:
          schema:
            type: object
            required:
              - status
              - title
              - instance
            properties:
              status:
                type: number
              title:
                type: string
              type:
                type: string
              instance:
                type: string
          examples:
            SlugConflictExample:
              $ref: '#/components/examples/SlugConflictExample'
    VersionSpecConflict:
      description: Conflict - only one version specification can exist
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          examples:
            VersionSpecConflictExample:
              $ref: '#/components/examples/VersionSpecConflictExample'
    VersionSpecHiddenConflict:
      description: >-
        Conflict - name attribute must be unique accross legacy version
        specifications
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          examples:
            VersionSpecConflictExample:
              $ref: '#/components/examples/VersionSpecHiddenConflictExample'
    ApiProductUnauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
    ApiProductNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
          examples:
            NotFoundExample:
              $ref: '#/components/examples/NotFoundExample'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
          examples:
            ForbiddenExample:
              $ref: '#/components/examples/ForbiddenExample'
    APIProductResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProduct'
          examples:
            Create API Product Response:
              $ref: '#/components/examples/APIProductExample'
    ListAPIProductResponse:
      description: List of API products
      content:
        application/json:
          schema:
            title: ListAPIProductsResponse
            type: object
            required:
              - data
              - meta
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProduct'
          examples:
            API Product Collection:
              value:
                data:
                  - id: e7a4f6c0-5777-4a37-bcb9-2d37d3b362ee
                    name: API Product
                    description: Text describing the API product
                    portal_ids: []
                    created_at: '2023-01-01T00:00:00.000Z'
                    updated_at: '2023-01-01T00:00:00.000Z'
                    version_count: 10
                    labels:
                      env: test
                meta:
                  page:
                    number: 1
                    size: 1
                    total: 10
    APIProductVersionResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductVersion'
          examples:
            Create API Product Response:
              $ref: '#/components/examples/APIProductVersionExample'
    ListAPIProductVersionResponse:
      description: List of API products
      content:
        application/json:
          schema:
            title: ListAPIProductVersionsResponse
            type: object
            required:
              - data
              - meta
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProductVersion'
          examples:
            API Product Version Collection:
              value:
                data:
                  - id: 9f5061ce-78f6-4452-9108-ad7c02821fd5
                    name: v1
                    gateway_service:
                      runtime_group_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
                      control_plane_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
                      id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
                    publish_status: unpublished
                    deprecated: false
                    created_at: '2023-01-01T00:00:00.000Z'
                    updated_at: '2023-01-01T00:00:00.000Z'
                meta:
                  page:
                    number: 1
                    size: 1
                    total: 10
    APIProductDocumentResponse:
      description: API product document
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductDocument'
          examples:
            Create API Product Document Response:
              $ref: '#/components/examples/APIProductDocumentExample'
    ListAPIProductDocumentResponse:
      description: List of API product documents
      content:
        application/json:
          schema:
            type: object
            required:
              - data
              - meta
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProductDocumentSummary'
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
          examples:
            List API Product Document Response:
              $ref: '#/components/examples/ListAPIProductDocumentSummaryExample'
        application/vnd.konnect.document-tree+json:
          schema:
            type: object
            required:
              - data
              - meta
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentTree'
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
          examples:
            List API Product Document Response:
              $ref: '#/components/examples/APIProductDocumentTreeExample'
    ListAPIProductVersionSpecResponse:
      description: List of API product version specification
      content:
        application/json:
          schema:
            title: ListAPIProductVersionSpecResponse
            type: object
            required:
              - data
              - meta
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProductVersionSpec'
          examples:
            List API Product Version Document Response:
              $ref: '#/components/examples/ListAPIProductVersionSpecExample'
    APIProductVersionSpecResponse:
      description: API product version specification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductVersionSpec'
          examples:
            API Product Version Document Response:
              $ref: '#/components/examples/APIProductVersionSpecExample'
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnsupportedMediaTypeError'
          examples:
            UnsupportedMediaTypeExample:
              $ref: '#/components/examples/UnsupportedMediaTypeExample'
  schemas:
    APIProductLabels:
      title: Labels
      type: object
      description: >
        description: A maximum of 5 user-defined labels are allowed on this
        resource.

        Keys must not start with kong, konnect, insomnia, mesh, kic or _, which
        are reserved for Kong.

        Keys are case-sensitive.
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z\-._]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
      default: {}
    APIProductFilterParameters:
      title: APIProductFilterParameters
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StringFieldFilter'
    APIProductVersionFilterParameters:
      title: APIProductVersionFilterParameters
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StringFieldFilter'
        publish_status:
          $ref: '#/components/schemas/StringFieldFilter'
    SortQuery:
      title: SortQuery
      type: string
      example: name desc
      description: >
        The `asc` suffix is optional as the default sort order is ascending.

        The `desc` suffix is used to specify a descending order.

        Multiple sort attributes may be provided via a comma separated list.

        JSONPath notation may be used to specify a sub-attribute (eg: 'foo.bar
        desc').
    APIProduct:
      title: API Product
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - description
        - portal_ids
        - created_at
        - updated_at
        - labels
        - version_count
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The API product ID.
          readOnly: true
        name:
          type: string
          description: The name of the API product
          example: My Name
        description:
          type: string
          nullable: true
          description: The description of the API product
          example: MyDescription
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product is published
            to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
        version_count:
          type: number
          example: 10
          description: The number of product versions attached to this API product
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        labels:
          $ref: '#/components/schemas/APIProductLabels'
    APIProductDocumentSummary:
      title: API Product Document Summary
      type: object
      additionalProperties: false
      required:
        - id
        - parent_document_id
        - slug
        - title
        - status
      properties:
        id:
          type: string
          format: uuid
          example: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
          description: The API product document identifier.
          readOnly: true
        parent_document_id:
          type: string
          format: uuid
          nullable: true
          description: The parent API product document identifier.
          example: null
        slug:
          type: string
          pattern: ^[\w-]+$
          description: API product document slug
          example: api-product-document
        status:
          $ref: '#/components/schemas/PublishStatus'
        title:
          type: string
          description: API product document title
          example: API Product Document
    APIProductDocument:
      type: object
      title: ApiProductDocument
      description: an api product document
      required:
        - id
        - parent_document_id
        - title
        - slug
        - status
        - metadata
        - ast
        - updated_at
        - created_at
      properties:
        id:
          type: string
          format: uuid
        parent_document_id:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
        slug:
          type: string
        status:
          type: string
          enum:
            - unpublished
            - published
        metadata:
          type: object
        ast:
          type: array
          items:
            $ref: '#/components/schemas/ChildNode'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    APIProductVersion:
      title: API Product Version
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - gateway_service
        - publish_status
        - deprecated
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
          description: The API product version identifier.
          readOnly: true
        name:
          type: string
          description: The version of the API product
          example: FirstVersion
        gateway_service:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - runtime_group_id
            - control_plane_id
          properties:
            id:
              type: string
              format: uuid
              nullable: true
              description: >-
                The identifier of a gateway service associated with the version
                of the API product.
              example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
            runtime_group_id:
              type: string
              format: uuid
              deprecated: true
              description: >-
                This field is deprecated, please use `control_plane_id` instead.
                The identifier of the control plane that the gateway service
                resides in
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
            control_plane_id:
              type: string
              format: uuid
              description: >-
                The identifier of the control plane that the gateway service
                resides in
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
        publish_status:
          type: string
          description: The publish status of the API product version
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          description: Indicates if this API product version is deprecated
          example: false
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    APIProductVersionSpec:
      title: API Product Version Spec
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - content
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: 7710d5c4-d902-410b-992f-18b814155b53
          description: The API product version specification identifier.
          readOnly: true
        name:
          type: string
          description: The name of the API product version specification
          example: oas.yaml
        content:
          type: string
          description: The contents of the API product version specification
          example: My YAML or JSON formatted OAS content
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    CreateAPIProductDTO:
      title: Create API Product Request
      description: The request schema to create an API product.
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name of the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
          default: null
        labels:
          $ref: '#/components/schemas/APIProductLabels'
    UpdateAPIProductDTO:
      title: Update API Product Request
      description: The request schema for updating an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name for the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
        labels:
          $ref: '#/components/schemas/APIProductLabels'
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product should be
            published to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
    CreateAPIProductVersionDTO:
      title: Create API Product Version Request
      description: The request schema to create a version of an API product.
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          nullable: false
          description: The publish status of the API product version.
          enum:
            - unpublished
            - published
          example: unpublished
          default: unpublished
        deprecated:
          type: boolean
          nullable: false
          description: Indicates if the version of the API product is deprecated.
          example: false
          default: false
        gateway_service:
          oneOf:
            - $ref: '#/components/schemas/GatewayServicePayload'
            - $ref: '#/components/schemas/LegacyGatewayServicePayload'
    CreateAPIProductVersionSpecDTO:
      title: Create API Product Version Specification Request
      description: >-
        The request schema to create a specification for a version of an API
        product.
      type: object
      additionalProperties: false
      required:
        - name
        - content
      properties:
        name:
          type: string
          nullable: false
          pattern: ^.+(?:\.yaml|\.yml|\.json)$
          minLength: 1
          maxLength: 255
          example: oas.yaml
          description: The name of the API product version specification
        content:
          type: string
          format: byte
          minLength: 1
          example: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
          description: The base64 encoded contents of the API product version specification
    CreateAPIProductDocumentDTO:
      type: object
      title: CreateDocumentPayload
      description: a document payload
      required:
        - slug
        - status
        - title
        - content
      properties:
        parent_document_id:
          type: string
          format: uuid
          nullable: true
          description: parent document id
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          default: null
        slug:
          type: string
          maxLength: 80
          pattern: ^[\w-]+$
          description: >-
            document slug. must be unique accross documents belonging to an api
            product
          example: path-for-seo
        status:
          $ref: '#/components/schemas/PublishStatus'
        title:
          type: string
          minLength: 1
          description: document title
          example: How to create a document in Konnect DocumentHub
        content:
          type: string
          format: byte
          description: Must be a base64 encoded string
          example: YmFzZTY0LWVuY29kZWQgdGV4dCBzdHJpbmc=
        metadata:
          type: object
          nullable: false
          description: metadata of the document
          example:
            author: John Doe
          default: {}
    UpdateAPIProductDocumentDTO:
      type: object
      title: UpdateDocumentAttributesAndContentPayload
      description: a document payload
      properties:
        parent_document_id:
          type: string
          format: uuid
          nullable: true
          description: >
            Parent document Id. If this value is explicitly set to null, the

            document will be put as a top level document at the bottom of the
            tree.
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug:
          type: string
          pattern: ^[\w-]+$
          maxLength: 80
          description: >-
            document slug. must be unique accross documents belonging to an api
            product
          example: path-for-seo
        status:
          $ref: '#/components/schemas/PublishStatus'
        title:
          type: string
          minLength: 1
          description: document title
          example: How to update a document in Konnect DocumentHub
        content:
          type: string
          format: byte
          description: base64 encoded string of the document content
          example: YmFzZTY0LWVuY29kZWQgdGV4dCBzdHJpbmc=
        metadata:
          type: object
          nullable: false
    UpdateAPIProductVersionDTO:
      title: Update API Product Version Request
      description: The request schema for updating a version of an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          description: The publish status of the API product version.
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          description: Indicates if the version of the API product is deprecated.
          example: false
        notify:
          type: boolean
          description: >
            When set to `true`, and all the following conditions are true:

            - version of the API product deprecation has changed from `false` ->
            `true`

            - version of the API product is published


            then consumers of the now deprecated verion of the API product will
            be notified.
          example: true
        gateway_service:
          anyOf:
            - $ref: '#/components/schemas/GatewayServicePayload'
            - $ref: '#/components/schemas/LegacyGatewayServicePayload'
    UpdateAPIProductVersionSpecDTO:
      title: Update API Product Version Specification Request
      description: >-
        The request schema for updating a specification for a version of an API
        product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: false
          pattern: ^.+(?:\.yaml|\.yml|\.json)$
          minLength: 1
          maxLength: 255
          example: oas.yaml
          description: The name of the API product version specification
        content:
          type: string
          format: byte
          minLength: 1
          example: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
          description: The base64 encoded contents of the API product version specification
    LegacyGatewayServicePayload:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - runtime_group_id
      properties:
        id:
          type: string
          format: uuid
          description: >-
            The identifier of a gateway service associated with the version of
            the API product.
          example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        runtime_group_id:
          type: string
          format: uuid
          deprecated: true
          description: >-
            The identifier of the control plane that the gateway service resides
            in
          example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    GatewayServicePayload:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - control_plane_id
      properties:
        id:
          type: string
          format: uuid
          description: >-
            The identifier of a gateway service associated with the version of
            the API product.
          example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        control_plane_id:
          type: string
          format: uuid
          description: >-
            The identifier of the control plane that the gateway service resides
            in
          example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    StringFieldEqualsFilter:
      title: StringFieldEqualsFilter
      description: Filters on the given string field value by exact match.
      oneOf:
        - type: string
        - type: object
          title: StringFieldEqualsComparison
          additionalProperties: false
          properties:
            eq:
              type: string
          required:
            - eq
      x-examples:
        example-1: equals-some-value
        example-2:
          eq: some-value
    StringFieldContainsFilter:
      title: StringFieldContainsFilter
      description: Filters on the given string field value by fuzzy match.
      type: object
      additionalProperties: false
      properties:
        contains:
          type: string
      required:
        - contains
      x-examples:
        example-1:
          contains: some-value
    StringFieldOContainsFilter:
      title: StringFieldOContainsFilter
      description: >-
        Returns entities that fuzzy-match any of the comma-delimited phrases in
        the filter string.
      type: object
      additionalProperties: false
      properties:
        ocontains:
          type: string
      required:
        - ocontains
      x-examples:
        example-1:
          ocontains: this-value,or-that-value
    StringFieldOEQFilter:
      title: StringFieldOEQFilter
      description: >-
        Returns entities that exact match any of the comma-delimited phrases in
        the filter string.
      type: object
      additionalProperties: false
      properties:
        oeq:
          type: string
      required:
        - oeq
      x-examples:
        example-1:
          oeq: some-value,some-other-value
    StringFieldNEQFilter:
      title: StringFieldNEQFilter
      description: Filters on the given string field value by exact match inequality.
      type: object
      additionalProperties: false
      properties:
        neq:
          type: string
      required:
        - neq
      x-examples:
        example-1:
          neq: not-this-value
    StringFieldFilter:
      title: StringFieldFilter
      description: Filters on the given string field value by either exact or fuzzy match.
      oneOf:
        - $ref: '#/components/schemas/StringFieldEqualsFilter'
        - $ref: '#/components/schemas/StringFieldContainsFilter'
        - $ref: '#/components/schemas/StringFieldOContainsFilter'
        - $ref: '#/components/schemas/StringFieldOEQFilter'
        - $ref: '#/components/schemas/StringFieldNEQFilter'
      x-examples:
        example-1: equals-some-value
        example-2:
          eq: some-value
        example-3:
          contains: some-value
        example-4:
          ocontains: some-potential,value
        example-5:
          oeq: some-potential,value
        example-6:
          neq: not-this-value
    PageMeta:
      type: object
      description: >-
        Contains pagination query parameters and the total number of objects
        returned.
      required:
        - number
        - size
        - total
      properties:
        number:
          type: number
          example: 1
        size:
          type: number
          example: 10
        total:
          type: number
          example: 100
    PaginatedMeta:
      type: object
      title: PaginatedMeta
      description: returns the pagination information
      properties:
        page:
          $ref: '#/components/schemas/PageMeta'
      required:
        - page
    CreatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity creation date.
      readOnly: true
    UpdatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity update date.
      readOnly: true
    BaseError:
      type: object
      title: Error
      description: standard error
      required:
        - status
        - title
        - instance
        - detail
      properties:
        status:
          type: integer
          description: >
            The HTTP status code of the error. Useful when passing the response

            body to child properties in a frontend UI. Must be returned as an
            integer.
          readOnly: true
        title:
          type: string
          description: |
            A short, human-readable summary of the problem. It should not
            change between occurences of a problem, except for localization.
            Should be provided as "Sentence case" for direct use in the UI.
          readOnly: true
        type:
          type: string
          description: The error type.
          readOnly: true
        instance:
          type: string
          description: |
            Used to return the correlation ID back to the user, in the format
            kong:trace:<correlation_id>. This helps us find the relevant logs
            when a customer reports an issue.
          readOnly: true
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurence of the
            problem.

            This field may contain request/entity data to help the user
            understand

            what went wrong. Enclose variable values in square brackets. Should
            be

            provided as "Sentence case" for direct use in the UI.
          readOnly: true
    InvalidRules:
      description: invalid parameters rules
      type: string
      readOnly: true
      nullable: true
      enum:
        - required
        - enum
        - min_length
        - max_length
        - min_digits
        - min_lowercase
        - min_uppercase
        - min_symbols
        - is_array
        - is_base64
        - is_boolean
        - is_date_time
        - is_integer
        - is_null
        - is_number
        - is_object
        - is_string
        - is_uuid
        - unknown_property
        - is_label
        - matches_regex
    InvalidParameterChoiceItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          $ref: '#/components/schemas/InvalidRules'
        reason:
          type: string
          example: is a required field
          readOnly: true
        choices:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
      required:
        - field
        - reason
    InvalidParameterDependentItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: true
          enum:
            - dependent_fields
        reason:
          type: string
          example: is a required field
          readOnly: true
        dependents:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
      required:
        - field
        - rule
        - reason
        - dependents
    InvalidParameters:
      type: array
      nullable: false
      uniqueItems: true
      minItems: 1
      description: invalid parameters
      items:
        oneOf:
          - $ref: '#/components/schemas/InvalidParameterChoiceItem'
          - $ref: '#/components/schemas/InvalidParameterDependentItem'
    BadRequestError:
      type: object
      required:
        - invalid_parameters
      properties:
        status:
          example: 400
        title:
          example: Bad Request
        type:
          example: https://httpstatuses.com/400
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid request body
        invalid_parameters:
          $ref: '#/components/schemas/InvalidParameters'
      allOf:
        - $ref: '#/components/schemas/BaseError'
    UnauthorizedError:
      type: object
      properties:
        status:
          example: 401
        title:
          example: Unauthorized
        type:
          example: https://httpstatuses.com/401
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid credentials
      allOf:
        - $ref: '#/components/schemas/BaseError'
    ForbiddenError:
      type: object
      properties:
        status:
          example: 403
        title:
          example: Forbidden
        type:
          example: https://httpstatuses.com/403
        instance:
          example: kong:trace:1234567890
        detail:
          example: Forbidden
      allOf:
        - $ref: '#/components/schemas/BaseError'
    NotFoundError:
      type: object
      properties:
        status:
          example: 404
        title:
          example: Not Found
        type:
          example: https://httpstatuses.com/404
        instance:
          example: kong:trace:1234567890
        detail:
          example: Not found
      allOf:
        - $ref: '#/components/schemas/BaseError'
    UnsupportedMediaTypeError:
      type: object
      properties:
        status:
          example: 415
        title:
          example: UnsupportedMediaType
        type:
          example: https://httpstatuses.com/415
        instance:
          example: kong:trace:1234567890
        detail:
          example: UnsupportedMediaType
      allOf:
        - $ref: '#/components/schemas/BaseError'
    PublishStatus:
      description: document publish status
      type: string
      enum:
        - published
        - unpublished
    DocumentTree:
      type: object
      title: DocumentTree
      description: a document tree
      required:
        - id
        - title
        - slug
        - metadata
        - children
        - status
      properties:
        id:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        parent_document_id:
          type: string
          format: uuid
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          nullable: true
        title:
          type: string
        slug:
          type: string
          description: document slug
          example: path-for-seo
        metadata:
          type: object
          description: metadata of the document
          example:
            author: John Doe
        status:
          $ref: '#/components/schemas/PublishStatus'
        children:
          type: array
          description: children of the document
          example:
            - id: d32d905a-ed33-46a3-a093-d8f536af9a8a
              title: Hello world
              status: published
              slug: hello-world
              metadata:
                author: John Doe
              children: []
          items:
            $ref: '#/components/schemas/DocumentTree'
    ChildNode:
      type: object
      oneOf:
        - $ref: '#/components/schemas/HeadingBlock'
        - $ref: '#/components/schemas/BlockQuoteBlock'
        - $ref: '#/components/schemas/ParagraphBlock'
        - $ref: '#/components/schemas/TextBlock'
        - $ref: '#/components/schemas/BreakBlock'
        - $ref: '#/components/schemas/CodeBlock'
        - $ref: '#/components/schemas/ListBlock'
        - $ref: '#/components/schemas/ListItemBlock'
        - $ref: '#/components/schemas/Text'
        - $ref: '#/components/schemas/Emphasis'
        - $ref: '#/components/schemas/Code'
        - $ref: '#/components/schemas/Link'
        - $ref: '#/components/schemas/Image'
        - $ref: '#/components/schemas/StrikeThrough'
        - $ref: '#/components/schemas/TableBlock'
        - $ref: '#/components/schemas/TableHeaderBlock'
        - $ref: '#/components/schemas/TableCellBlock'
        - $ref: '#/components/schemas/TableRowBlock'
        - $ref: '#/components/schemas/TaskCheckbox'
      discriminator:
        propertyName: type
    NodeChildren:
      description: List of children nodes of the current node
      type: array
      items:
        $ref: '#/components/schemas/ChildNode'
    HeadingBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - heading
        level:
          description: Level of the heading which maps to HTML <h> tag
          type: number
          minimum: 1
          maximum: 6
        children:
          $ref: '#/components/schemas/NodeChildren'
    BlockQuoteBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - blockquote
        children:
          $ref: '#/components/schemas/NodeChildren'
    ParagraphBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - paragraph
        children:
          $ref: '#/components/schemas/NodeChildren'
    TextBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - text_block
        children:
          $ref: '#/components/schemas/NodeChildren'
    BreakBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - break
        children:
          $ref: '#/components/schemas/NodeChildren'
    CodeBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - code_block
        lang:
          type: string
        children:
          $ref: '#/components/schemas/NodeChildren'
    ListBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - list
        isOrdered:
          description: Defines if the list is ordered or not
          type: boolean
        children:
          $ref: '#/components/schemas/NodeChildren'
    ListItemBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - list_item
        children:
          $ref: '#/components/schemas/NodeChildren'
    Text:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string
        hardBreak:
          description: |
            If this property is true the end of this block should
            be a carriage return and not concatenated to the next Text block.
          type: boolean
        softBreak:
          description: |
            If this property is true the end of this block should should be
            concatenated with a space caracter before the next block. This is
            the flag showing that the parsed markdown block was at the end of
            the line.
          type: boolean
        children:
          $ref: '#/components/schemas/NodeChildren'
    Emphasis:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - emphasis
        level:
          type: number
          minimum: 1
          maximum: 2
          description: |
            Level of emphasis
            1 - italic
            2 - bold
        children:
          $ref: '#/components/schemas/NodeChildren'
    Code:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - code
        children:
          $ref: '#/components/schemas/NodeChildren'
    Link:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - link
        href:
          description: Target url of the link
          type: string
        title:
          description: Title of the link
          type: string
    Image:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - image
        url:
          description: Url of the image
          type: string
        alt:
          description: Alternate tag of the image
          type: string
        title:
          description: Title of the image
          type: string
    StrikeThrough:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - strikethrough
    AlignmentKind:
      type: string
      enum:
        - left
        - right
        - center
        - none
    TableAlignments:
      type: array
      nullable: true
      items:
        $ref: '#/components/schemas/AlignmentKind'
    TableBlock:
      type: object
      required:
        - type
        - alignments
      properties:
        type:
          type: string
          enum:
            - table
        alignments:
          $ref: '#/components/schemas/TableAlignments'
        children:
          $ref: '#/components/schemas/NodeChildren'
    TableHeaderBlock:
      type: object
      required:
        - type
        - alignments
      properties:
        type:
          type: string
          enum:
            - table_header
        alignments:
          $ref: '#/components/schemas/TableAlignments'
        children:
          $ref: '#/components/schemas/NodeChildren'
    TableCellBlock:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - table_cell
        alignment:
          $ref: '#/components/schemas/AlignmentKind'
        children:
          $ref: '#/components/schemas/NodeChildren'
    TableRowBlock:
      type: object
      required:
        - type
        - alignments
      properties:
        type:
          type: string
          enum:
            - table_row
        alignments:
          $ref: '#/components/schemas/TableAlignments'
        children:
          $ref: '#/components/schemas/NodeChildren'
    TaskCheckbox:
      type: object
      required:
        - checked
        - type
      properties:
        type:
          type: string
          enum:
            - task_checkbox
        checked:
          type: boolean
          description: State of the checkbox
    ConflictError:
      type: object
      properties:
        status:
          example: 409
        title:
          example: Conflict
        type:
          example: https://httpstatuses.com/409
        instance:
          example: kong:trace:1234567890
        detail:
          example: Conflict
      allOf:
        - $ref: '#/components/schemas/BaseError'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The personal access token is meant to be used as an alternative to
        basic-auth when accessing Konnect via APIs.

        You can generate a Personal Access Token (PAT) from the [personal access
        token page](https://cloud.konghq.com/global/tokens/) in the Konnect
        dashboard.

        The PAT token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer kpat_xgfT...'`
    systemAccountAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The system account access token is meant for automations and
        integrations that are not directly associated with a human identity.

        You can generate a system account Access Token by creating a system
        account and then obtaining a system account access token for that
        account.

        The access token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer spat_i2Ej...'`
  examples:
    APIProductExample:
      value:
        id: e7a4f6c0-5777-4a37-bcb9-2d37d3b362ee
        name: API Product
        description: Text describing the API product
        portal_ids: []
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
        version_count: 10
        labels:
          env: test
    APIProductVersionExample:
      value:
        id: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: v1
        gateway_service:
          runtime_group_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
          control_plane_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
          id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        publish_status: unpublished
        deprecated: false
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    APIProductVersionSpecExample:
      value:
        id: 7710d5c4-d902-410b-992f-18b814155b53
        name: oas.yaml
        content: My YAML or JSON formatted OAS content
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    ListAPIProductVersionSpecExample:
      value:
        data:
          - id: 7710d5c4-d902-410b-992f-18b814155b53
            name: oas.yaml
            content: My YAML or JSON formatted OAS content
            created_at: '2023-01-01T00:00:00.000Z'
            updated_at: '2023-01-01T00:00:00.000Z'
        meta:
          page:
            number: 1
            size: 1
            total: 1
    CreateAPIProductRequestExample:
      summary: Create API Product Request
      value:
        name: API Product
        description: Text describing the API product
        labels:
          env: test
    CreateAPIProductRequestMinimalExample:
      summary: Create API Product Request (Minimal)
      value:
        name: API Product
    UpdateAPIProductRequestExample:
      summary: Update API Product Request
      value:
        name: API Product with Update Name
        description: Updated text describing the API product
    PublishAPIProductToPortalExample:
      summary: Publish API Product to Portal
      value:
        portal_ids:
          - 07087c41-495a-4599-bc98-4904f1b46654
    CreateAPIProductVersionRequestMinimalExample:
      summary: Create API Product Request (Minimal)
      value:
        name: v1
    CreateLinkedAPIProductVersionRequestExample:
      summary: Create API Product Request
      value:
        name: v1
        publish_status: unpublished
        deprecated: false
        gateway_service:
          control_plane_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
          id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
    CreateAPIProductVersionSpecificationRequestExample:
      summary: Create API Product Version Specification Request
      value:
        name: oas.yaml
        content: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
    PublishApiProductVersionRequestExample:
      summary: Publish API Product Version
      value:
        publish_status: published
    LinkAPIProductVersionRequestExample:
      summary: Link API Product Version
      value:
        gateway_service:
          control_plane_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
          id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
    UnlinkAPIProductVersionRequestExample:
      summary: Unlink API Product Version
      value:
        gateway_service: null
    DeprecateAPIProductVersionRequestExample:
      summary: Deprecate API Product Version and Notify Developers
      value:
        deprecated: true
        notify: true
    UpdateAPIProductVersionSpecNameRequestExample:
      summary: Update API Product Version Name
      value:
        name: oas.yaml
    UpdateAPIProductVersionSpecContentRequestExample:
      summary: Update API Product Version Content
      value:
        content: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
    UpdateAPIProductVersionSpecRequestExample:
      summary: Update API Product Version Name and Content
      value:
        name: oas.yaml
        content: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
    APIProductDocumentExample:
      value:
        id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
        parent_document_id: null
        title: API Product Document
        slug: api-product-document
        status: published
        ast:
          - children:
              - text: API Product Document Header
                type: text
            level: 1
            type: heading
          - children:
              - children:
                  - text: API product document content
                    type: text
                type: paragraph
        metadata: {}
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    APIProductDocumentTreeExample:
      value:
        data:
          - id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
            parent_document_id: null
            slug: api-product-document
            status: published
            title: API Product Document
            metadata: {}
            children:
              - children: []
                id: d1da26c9-02a8-4492-868e-b069e2efa221
                metadata: {}
                parent_document_id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
                slug: api-product-document-child
                status: published
                title: API Product Document Child
        meta:
          page:
            number: 1
            size: 1
            total: 10
    ListAPIProductDocumentSummaryExample:
      value:
        data:
          - id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
            parent_document_id: null
            slug: api-product-document
            status: published
            title: API Product Document
        meta:
          page:
            number: 1
            size: 1
            total: 10
    CreateAPIProductDocumentRequestExample:
      summary: Create API Product Document Request
      value:
        slug: api-product-document
        status: published
        title: API Product Document
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudA==
        parent_document_id: 417a2aed-9a75-4eca-a943-fa7d88ed6a73
        metadata:
          author: John Doe
    CreateAPIProductDocumentRequestMinimalExample:
      summary: Create API Product Document Request (Minimal)
      value:
        slug: api-product-document
        status: published
        title: API Product Document
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudA==
    UpdateAPIProductDocumentAttributesRequestExample:
      summary: Update API Product Document Attributes Request
      value:
        parent_document_id: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug: api-product-document
        status: published
        title: API Product Document
        metadata:
          author: Jane Doe
    UpdateAPIProductDocumentContentRequestExample:
      summary: Update API Product Document Content Request
      value:
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudCB1cGRhdGVk
    UpdateAPIProductDocumentAttributesAndContentRequestExample:
      summary: Update API Product Document Attributes and Content Request
      value:
        parent_document_id: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug: api-product-document
        status: published
        title: API Product Document
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudCB1cGRhdGVk
        metadata:
          author: Jane Doe
    APIProductNameBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:8405749052424858251
        detail: Invalid Parameters
        invalid_parameters:
          - field: name
            rule: min_length
            choices: []
            reason: name must be longer than or equal to 1 characters
    APIProductDocumentBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:5832302153563197721
        detail: Invalid Parameters
        invalid_parameters:
          - field: slug
            rule: matches_regex
            choices: []
            reason: slug must match /^[\w-]+$/ regular expression
    APIProductVersionSpecContentBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:1433447772874964729
        detail: Invalid Parameters
        invalid_parameters:
          - field: content
            rule: min_length
            choices: []
            reason: content must be longer than or equal to 1 characters
    UnauthorizedExample:
      value:
        status: 401
        title: Unauthorized
        instance: kong:trace:8347343766220159418
        detail: Unauthorized
    NotFoundExample:
      value:
        status: 404
        title: Not Found
        instance: kong:trace:6816496025408232265
        detail: Not Found
    ForbiddenExample:
      value:
        status: 403
        title: Forbidden
        instance: kong:trace:2723154947768991354
        detail: You do not have permission to perform this action
    SlugConflictExample:
      value:
        status: 409
        title: Conflict
        instance: kong:trace:3169213858331814220
    VersionSpecConflictExample:
      value:
        status: 409
        title: Conflict
        instance: kong:trace:3169213858331814220
        detail: >-
          Specification for API product version
          '9f5061ce-78f6-4452-9108-ad7c02821fd5' already exists
    VersionSpecHiddenConflictExample:
      value:
        status: 409
        title: Conflict
        instance: kong:trace:9039922446017540182
        detail: >-
          Key (service_version_id, path)=(23380be0-c15e-4ca8-bcf7-43aadddc91b1,
          hidden.yaml) already exists.
    InvalidSortQueryBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:4725061142075238974
        detail: Invalid Parameters
        invalid_parameters:
          - field: sort
            rule: enum
            choices: []
            reason: '"sort" field must contain any of: []'
    InvalidSortQueryNameBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:4725061142075238974
        detail: Invalid Parameters
        invalid_parameters:
          - field: sort
            rule: enum
            choices:
              - name
            reason: '"sort" field must contain any of: [name]'
    UnsupportedMediaTypeExample:
      value:
        status: 415
        title: Unsupported Media Type
        instance: kong:trace:8347343766220159418
        detail: 'This API only supports requests with `Content-Type: application/json`'
