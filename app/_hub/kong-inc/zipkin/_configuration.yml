params:
  name: zipkin
  service_id: true
  route_id: true
  consumer_id: true
  konnect_examples: false
  protocols:
    - name: http
    - name: https
    - name: grpc
    - name: grpcs
    - name: tcp
    - name: tls
    - name: tls_passthrough
      minimum_version: "2.7.x"
    - name: udp
    - name: ws
      minimum_version: "3.0.x"
    - name: wss
      minimum_version: "3.0.x"
  dbless_compatible: 'yes'
  config:
    - name: local_service_name
      minimum_version: "2.7.x"
      required: true
      default: kong
      datatype: string
      description: |
        The name of the service as displayed in Zipkin. Customize this name to
        tell your Kong Gateway services apart in Zipkin request traces.
    - name: http_endpoint
      required: false
      default: ''
      value_in_examples: 'http://your.zipkin.collector:9411/api/v2/spans'
      datatype: string
      description: |
        The full HTTP(S) endpoint to which Zipkin spans should be sent by Kong.
        If not specified, the Zipkin plugin will only act as a tracing header
        generator/transmitter.
    - name: sample_ratio
      required: false
      default: '`0.001`'
      value_in_examples: 0.001
      datatype: number
      description: |
        How often to sample requests that do not contain trace IDs.
        Set to `0` to turn sampling off, or to `1` to sample **all** requests. The
        value must be between zero (0) and one (1), inclusive.
    - name: default_service_name
      required: false
      default: null
      datatype: string
      description: |
        Set a default service name to override `unknown-service-name` in the 
        Zipkin spans.
    - name: include_credential
      required: true
      default: true
      value_in_examples: true
      datatype: boolean
      description: |
        Specify whether the credential of the currently authenticated consumer
        should be included in metadata sent to the Zipkin server.
    - name: traceid_byte_count
      required: true
      default: 16
      datatype: integer
      description: |
        The length in bytes of each request's Trace ID. The value can be either `8` or `16`.

    # ----- 2.3.x and earlier version of the 'header_type' parameter -----
    - name: header_type
      maximum_version: "2.3.x"
      required: true
      default: preserve
      datatype: string
      description: |
        All HTTP requests going through the plugin are tagged with a tracing HTTP request.
        This property codifies what kind of tracing header the plugin expects on incoming requests.

        Possible values: `b3`, `b3-single`, `w3c`, `preserve`, `jaeger`, `ot`, or `ignore`.
        * `b3`: Expects [Zipkin's B3 multiple headers](https://github.com/openzipkin/b3-propagation#multiple-headers)
        on incoming requests, and will add them to the transmitted requests if the headers are missing from those requests.
        * `b3-single`: Expects or adds Zipkin's B3 single-header tracing headers.
        * `w3c`: Expects or adds W3C's traceparent tracing header.
        * `preserve`: Does not expect any format, and will transmit whatever header is recognized or present,
        with a default of `b3` if none is found. In case of a mismatch between the expected and incoming
        tracing headers (for example, when `header_type` is set to `b3` but a w3c-style tracing header is
        found in the incoming request), then the plugin will add both kinds of tracing headers
        to the request and generate a mismatch warning in the logs.

    # ----- 2.4.x-2.6.x version of the 'header_type' parameter -----
    - name: header_type
      minimum_version: "2.4.x"
      maximum_version: "2.6.x"
      required: true
      default: preserve
      datatype: string
      description: |
        All HTTP requests going through the plugin are tagged with a tracing HTTP request.
        This property codifies what kind of tracing header the plugin expects on incoming requests.

        Possible values: `b3`, `b3-single`, `w3c`, `preserve`, `jaeger`, `ot`, or `ignore`.
        * `b3`: Expects [Zipkin's B3 multiple headers](https://github.com/openzipkin/b3-propagation#multiple-headers)
        on incoming requests, and will add them to the transmitted requests if the headers are missing from those requests.
        * `b3-single`: Expects or adds Zipkin's B3 single-header tracing headers.
        * `w3c`: Expects or adds W3C's traceparent tracing header.
        * `preserve`: Does not expect any format, and will transmit whatever header is recognized or present,
        with a default of `b3` if none is found. In case of a mismatch between the expected and incoming
        tracing headers (for example, when `header_type` is set to `b3` but a w3c-style tracing header is
        found in the incoming request), then the plugin will add both kinds of tracing headers
        to the request and generate a mismatch warning in the logs.
        * `jaeger`: Expects or adds
        [Jaeger-style tracing headers](https://www.jaegertracing.io/docs/1.22/client-libraries/#propagation-format) (`uber-trace-id`).
        * `ot`: Expects or adds [OpenTelemetry tracing headers](https://github.com/open-telemetry/opentelemetry-java/blob/96e8523544f04c305da5382854eee06218599075/extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/OtTracerPropagator.java) of the form `ot-tracer-*`.
      # ----------------------------------------------------------

    - name: header_type # current version of param
      minimum_version: "2.7.x"
      required: true
      default: preserve
      datatype: string
      description: |
        All HTTP requests going through the plugin are tagged with a tracing HTTP request.
        This property codifies what kind of tracing header the plugin expects on incoming requests.

        Possible values: `b3`, `b3-single`, `w3c`, `preserve`, `jaeger`, `ot`, or `ignore`.
        * `b3`: Expects [Zipkin's B3 multiple headers](https://github.com/openzipkin/b3-propagation#multiple-headers)
        on incoming requests, and will add them to the transmitted requests if the headers are missing from those requests.
        * `b3-single`: Expects or adds Zipkin's B3 single-header tracing headers.
        * `w3c`: Expects or adds W3C's traceparent tracing header.
        * `preserve`: Does not expect any format, and will transmit whatever header is recognized or present,
        with a default of `b3` if none is found. In case of a mismatch between the expected and incoming
        tracing headers (for example, when `header_type` is set to `b3` but a w3c-style tracing header is
        found in the incoming request), then the plugin will add both kinds of tracing headers
        to the request and generate a mismatch warning in the logs.
        * `jaeger`: Expects or adds
        [Jaeger-style tracing headers](https://www.jaegertracing.io/docs/1.22/client-libraries/#propagation-format) (`uber-trace-id`).
        * `ot`: Expects or adds [OpenTelemetry tracing headers](https://github.com/open-telemetry/opentelemetry-java/blob/96e8523544f04c305da5382854eee06218599075/extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/OtTracerPropagator.java) of the form `ot-tracer-*`.
        * `ignore`: Does not read any tracing headers from the incoming request.
        Starts a new request using the `default_header_type` value, or falls back to
        `b3` if there is no `default_header_type` value set.
    - name: default_header_type
      minimum_version: "2.3.x"
      required: true
      default: b3
      datatype: string
      description: |
        Allows specifying the type of header to be added to requests with no pre-existing tracing headers
        and when `config.header_type` is set to `"preserve"`.
        When `header_type` is set to any other value, `default_header_type` is ignored.

        Possible values are `b3`, `b3-single`, `w3c`, `jaeger`, or `ot`.
        See the entry for `header_type` for value definitions.
    - name: tags_header
      minimum_version: "2.4.x"
      required: true
      default: Zipkin-Tags
      datatype: string
      description: |
        The Zipkin plugin will add extra headers to the tags associated with any HTTP
        requests that come with a header named as configured by this property. The
        format is `name_of_tag=value_of_tag`, separated by semicolons (`;`).

        For example: with the default value, a request with the header
        `Zipkin-Tags: fg=blue; bg=red` will generate a trace with the tag `fg` with
        value `blue`, and another tag called `bg` with value `red`.
    - name: static_tags
      minimum_version: "2.3.x"
      required: false
      default: []
      value_in_examples: null
      datatype: array of string tags
      description: |
        The tags specified on this property will be added to the generated request traces. For example:
        `[ { "name": "color", "value": "red" } ]`.

    - name: http_span_name
      minimum_version: "3.0.x"
      required: true
      default: method
      value_in_examples: null
      datatype: string
      description: |
        Specify whether to include the HTTP path in the span name.

        Options:
        * `method`: Do not include the HTTP path. This is the default.
        * `method_path`: Include the HTTP path.

    - name: connect_timeout
      minimum_version: "3.0.x"
      required: false
      default: 2000
      value_in_examples: null
      datatype: number
      description: The timeout, in milliseconds, for establishing a connection to the Zipkin server.
    - name: send_timeout
      minimum_version: "3.0.x"
      required: false
      default: 5000
      value_in_examples: null
      datatype: number
      description: The timeout, in milliseconds, between two
        successive write operations when sending a request to the Zipkin server.
    - name: read_timeout
      minimum_version: "3.0.x"
      required: false
      default: 5000
      value_in_examples: null
      datatype: number
      description: The timeout, in milliseconds, between two
        successive read operations when receiving a response from the Zipkin server.
    - name: response_header_for_traceid
      minimum_version: "3.1.x"
      required: false
      default: null
      value_in_examples: null
      datatype: string
      description: |
        Set a header name to append to responses. This header name
        is sent to the client, making it possible to trace the ID of the
        correlated request.
    - name: phase_duration_flavor
      minimum_version: "3.2.x"
      required: true
      default: annotations
      value_in_examples: null
      datatype: string
      description: |
        Specify whether to include the duration of each phase as an annotation or a tag.

        Options:
        * `annotations`: Include the duration of each phase as an annotation. This is the default.
        * `tags`: Include the duration of each phase as a tag.

