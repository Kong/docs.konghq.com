name: response-transformer
service_id: true
route_id: true
consumer_id: true
protocols:
  - name: http
  - name: https
  - name: grpc
  - name: grpcs
dbless_compatible: 'yes'
config:
  - name: remove.headers
    required: false
    value_in_examples:
      - x-toremove
      - x-another-one
    datatype: array of string elements
    description: List of header names. Unset the header(s) with the given name.
  - name: remove.json
    required: false
    value_in_examples:
      - json-key-toremove
      - another-json-key
    datatype: array of string elements
    description: List of property names. Remove the property from the JSON body if it is present.
  - name: rename.headers
    required: false
    datatype: array of string elements
    description: 'List of `original_header_name:new_header_name` pairs. If the header `original_headername` is already set, rename it to `new_headername`. Ignored if the header is not already set.'
  - name: replace.headers
    required: false
    datatype: array of string elements
    description: 'List of `headername:value` pairs. If and only if the header is already set, replace its old value with the new one. Ignored if the header is not already set.'
  - name: replace.json
    required: false
    datatype: array of string elements
    description: 'List of `property:value` pairs. If and only if the parameter is already present, replace its old value with the new one. Ignored if the parameter is not already present.'
  - name: replace.json_types
    required: false
    datatype: array of string elements
    description: |
      List of JSON type names. Specify the types of the JSON values returned when
      replacing JSON properties. Each string
      element can be one of: boolean, number, or string.
  - name: add.headers
    required: false
    value_in_examples:
      - 'x-new-header:value'
      - 'x-another-header:something'
    datatype: array of string elements
    description: 'List of `headername:value` pairs. If and only if the header is not already set, set a new header with the given value. Ignored if the header is already set.'
  - name: add.json
    required: false
    value_in_examples:
      - 'new-json-key:some_value'
      - 'another-json-key:some_value'
    datatype: array of string elements
    description: 'List of `property:value` pairs. If and only if the property is not present, add a new property with the given value to the JSON body. Ignored if the property is already present.'
  - name: add.json_types
    required: false
    value_in_examples:
      - 'new-json-key:string'
      - 'another-json-key:boolean'
      - 'another-json-key:number'
    datatype: array of string elements
    description: |
      List of JSON type names. Specify the types of the JSON values returned when adding
      a new JSON property. Each string element can be one of: boolean, number, or string.
  - name: append.headers
    required: false
    value_in_examples:
      - 'x-existing-header:some_value'
      - 'x-another-header:some_value'
    datatype: array of string elements
    description: |
      List of `headername:value` pairs. If the header is not set, set it with the given value. If it is
      already set, a new header with the same name and the new value will be set. Each string
      element can be one of: boolean, number, or string.
  - name: append.json
    required: false
    datatype: array of string elements
    description: 'List of `property:value` pairs. If the property is not present in the JSON body, add it with the given value. If it is already present, the two values (old and new) will be aggregated in an array.'
  - name: append.json_types
    required: false
    datatype: array of string elements
    description: |
      List of JSON type names. Specify the types of the JSON values returned when appending
      JSON properties. Each string element can be one of: boolean, number, or string.
