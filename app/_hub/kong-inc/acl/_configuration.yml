name: acl
service_id: true
route_id: true
consumer_id: false
protocols:
  - name: http
  - name: https
  - name: grpc
  - name: grpcs
dbless_compatible: partially
dbless_explanation: |
  Consumers and ACLs can be created with declarative configuration.

  Admin API endpoints that POST, PUT, PATCH, or DELETE ACLs do not work in DB-less mode.
config:
  # deprecated parameters
  - name: whitelist
    required: semi
    default:
    value_in_examples: group1, group2
    description: |
      Comma separated list of arbitrary group names that are allowed to consume the Service or the Route (or API). One of `config.whitelist` or `config.blacklist` must be specified.
    maximum_version: "2.0.x"
  - name: blacklist
    required: semi
    default:
    description: |
      Comma separated list of arbitrary group names that are not allowed to consume the Service or the Route (or API). One of `config.whitelist` or `config.blacklist` must be specified.
    maximum_version: "2.0.x"
  # current parameters
  - name: allow
    required: semi
    default: null
    value_in_examples:
      - group1
      - group2
    datatype: array of string elements
    description: |
      Arbitrary group names that are allowed to consume the Service or Route. One of `config.allow` or `config.deny` must be specified.
    minimum_version: "2.1.x"
  - name: deny
    required: semi
    default: null
    datatype: array of string elements
    description: |
      Arbitrary group names that are not allowed to consume the Service or Route. One of `config.allow` or `config.deny` must be specified.
    minimum_version: "2.1.x"
  - name: hide_groups_header
    required: true
    default: false
    value_in_examples: true
    datatype: boolean
    description: |
      Flag that if enabled (`true`), prevents the `X-Consumer-Groups` header to be sent in the request to the Upstream service.
