params:
  name: response-transformer-advanced
  service_id: true
  route_id: true
  consumer_id: true
  konnect_examples: false
  dbless_compatible: 'yes'
  protocols:
    - name: http
    - name: https
    - name: grpc
    - name: grpcs
  config:
    - name: remove.headers
      required: false
      value_in_examples:
        - x-toremove
        - 'x-another-one:application/json'
        - 'x-list-of-values:v1,v2,v3'
        - 'Set-Cookie:/JSESSIONID=.*/'
        - 'x-another-regex://status/$/'
        - 'x-one-more-regex:/^/begin//'
      datatype: array of string elements
      description: 'List of `headername[:value]`. If only `headername` is given, unset the header field with the given `headername`. If `headername:value` is given, unset the header field `headername` when it has a specific `value`. If `value` starts and ends with a `/` (slash character), then it is considered to be a regular expression. Note that in accordance with [RFC 7230](https://httpwg.org/specs/rfc7230.html#field.order) multiple header values with the same header name are allowed if the entire field value for that header field is defined as a comma-separated list or the header field is a `Set-Cookie` header field.'
    - name: remove.json
      required: false
      datatype: array of string elements
      value_in_examples:
        - json-key-toremove
        - another-json-key
      description: List of property names. Remove the property from the JSON body if it is present.
    - name: remove.if_status
      required: false
      datatype: array of string elements
      description: List of response status codes or status code ranges to which the transformation will apply. Empty means all response codes.
    - name: rename.headers
      required: false
      datatype: array of string elements
      description: 'List of `headername1:headername2` pairs. If a header with `headername1` exists and `headername2` is valid, rename header to `headername2`.'
    - name: rename.if_status
      required: false
      datatype: array of string elements
      description: List of response status codes or status code ranges to which the transformation will apply. Empty means all response codes.
    - name: replace.headers
      required: false
      datatype: array of string elements
      description: 'List of `headername:value` pairs. If and only if the header is already set, replace its old value with the new one. Ignored if the header is not already set.'
    - name: replace.json
      required: false
      datatype: array of string elements
      description: 'List of property `name:value` pairs. If and only if the parameter is already present, replace its old value with the new one. Ignored if the parameter is not already present.'
    - name: replace.json_types
      required: false
      datatype: 'array of string, boolean, or number elements'
      description: List of JSON type names. Specify the types of the JSON values returned when replacing JSON properties.
    - name: replace.body
      required: false
      datatype: string
      description: String with which to replace the entire response body.
    - name: replace.if_status
      required: false
      datatype: array of string elements
      description: List of response status codes or status code ranges to which the transformation will apply. Empty means all response codes.
    - name: add.headers
      required: false
      value_in_examples:
        - 'x-new-header:value'
        - 'x-another-header:something'
      datatype: array of string elements
      description: 'List of `headername:value` pairs. If and only if the header is not already set, set a new header with the given value. Ignored if the header is already set.'
    - name: add.json
      required: false
      value_in_examples:
        - 'new-json-key:some_value'
        - 'another-json-key:some_value'
      datatype: array of string elements
      description: 'List of `name:value` pairs. If and only if the property is not present, add a new property with the given value to the JSON body. Ignored if the property is already present.'
    - name: add.json_types
      required: false
      value_in_examples:
        - 'new-json-key:string'
        - 'another-json-key:boolean'
        - 'another-json-key:number'
      datatype: 'array of string, boolean, or number elements'
      description: List of JSON type names. Specify the types of the JSON values returned when adding a new JSON property.
    - name: add.if_status
      required: false
      datatype: array of string elements
      description: List of response status codes or status code ranges to which the transformation will apply. Empty means all response codes.
    - name: append.headers
      required: false
      value_in_examples:
        - 'x-existing-header:some_value'
        - 'x-another-header:some_value'
      datatype: array of string elements
      description: 'List of `headername:value` pairs. If the header is not set, set it with the given value. If it is already set, a new header with the same name and the new value will be set.'
    - name: append.json
      required: false
      datatype: array of string elements
      description: 'List of `name:value` pairs. If the property is not present in the JSON body, add it with the given value. If it is already present, the two values (old and new) will be aggregated in an array.'
    - name: append.json_types
      required: false
      datatype: 'array of string, boolean, or number elements'
      description: List of JSON type names. Specify the types of the JSON values returned when appending JSON properties.
    - name: append.if_status
      required: false
      datatype: null
      description: List of response status codes or status code ranges to which the transformation will apply. Empty means all response codes.
    - name: allow.json
      required: false
      default: null
      value_in_examples: null
      datatype: array of string elements
      description: |
        Set of parameter names. Only allowed parameters are present in the JSON response body.
    - name: transform.functions
      required: false
      datatype: array of function elements
      description: Set of Lua functions to perform arbitrary transforms in a response JSON body.
    - name: transform.if_status
      required: false
      datatype: array of string elements
      description: List of response status codes or ranges to which the arbitrary transformation applies. Leaving empty implies that the transformations apply to all response codes.
    - name: transform.json
      required: false
      datatype: array of string elements
      description: 'Apply Lua functions to a particular list of JSON property `name` or `name:value` pairs.'
    - name: dots_in_keys
      required: false
      datatype: boolean
      default: true
      description: 'Whether dots (for example, `customers.info.phone`) should be treated as part of a property name or used to descend into nested JSON objects. See [Arrays and nested objects](#arrays-and-nested-objects).'
