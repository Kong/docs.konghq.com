params:
  name: mtls-auth
  service_id: true
  route_id: true
  protocols:
    - name: http
    - name: https
    - name: grpc
    - name: grpcs
  dbless_compatible: 'yes'
  config:
    - name: anonymous
      required: false
      default: null
      datatype: string
      description:
        An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request fails with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.
      minimum_version: "3.1.x"
    - name: anonymous
      required: false
      default: null
      datatype: string
      description: |
        An optional string (consumer UUID) value to use as an "anonymous" consumer if authentication fails.
        If the request is left empty (which it is by default), it fails with an authentication failure of either
        `HTTP 495` if the client presented a certificate that is not acceptable, or `HTTP 496` if the client failed
        to present certificate as requested. Please note that this value must refer to the consumer `id`
        attribute, which is internal to Kong, and **not** its `custom_id`.
      maximum_version: "3.0.x"
    - name: consumer_by
      required: false
      default: '`[ "username", "custom_id" ]`'
      datatype: array of string elements
      description: |
        Whether to match the subject name of the client-supplied certificate against consumer's `username` and/or `custom_id` attribute. If set to `[]` (the empty array), then auto-matching is disabled.
    - name: ca_certificates
      required: true
      value_in_examples:
        - fdac360e-7b19-4ade-a553-6dd22937c82f
      datatype: array of string elements
      description: |
        List of CA Certificates strings to use as Certificate Authorities (CA) when validating a client certificate.
        At least one is required but you can specify as many as needed. The value of this array is comprised
        of primary keys (`id`).
    - name: skip_consumer_lookup
      default: '`false`'
      required: true
      datatype: boolean
      description: |
        Skip consumer lookup once certificate is trusted against the configured CA list.
    - name: authenticated_group_by
      default: '`CN`'
      required: false
      datatype: string
      description: |
        Certificate property to use as the authenticated group. Valid values are `CN` (Common Name) or
        `DN` (Distinguished Name). Once `skip_consumer_lookup` is applied, any client with a
        valid certificate can access the Service/API. To restrict usage to only some of the authenticated users,
        also add the ACL plugin (not covered here) and create allowed or denied groups of users.
    - name: revocation_check_mode
      default: '`IGNORE_CA_ERROR`'
      required: false
      datatype: string
      description: |
        >**Known Issue:** The default value `IGNORE_CA_ERROR` has a known issue in versions 1.5.0.0 and later.
        As a workaround, manually set the value to `SKIP`.

        Controls client certificate revocation check behavior. Valid values are `SKIP`, `IGNORE_CA_ERROR`, or `STRICT`.
        If set to `SKIP`, no revocation check is performed. If set to `IGNORE_CA_ERROR`, the plugin respects
        the revocation status when either OCSP or CRL URL is set, and doesn't fail on network issues. If set to `STRICT`,
        the plugin only treats the certificate as valid when it's able to verify the revocation status, and a missing
        OCSP or CRL URL in the certificate or a failure to connect to the server results in a revoked status.
        If both OCSP and CRL URL are set, the plugin always checks OCSP first, and only checks the CRL URL if
        it can't communicate with the OCSP server.
    - name: http_timeout
      default: '30000'
      datatype: number
      description: |
        HTTP timeout threshold in milliseconds when communicating with the OCSP server or downloading CRL.
    - name: cert_cache_ttl
      default: '60000'
      datatype: number
      description: |
        The length of time in milliseconds between refreshes of the revocation check status cache.
    - name: cache_ttl
      default: '60'
      required: true
      datatype: number
      description: |
        Cache expiry time in seconds.
    - name: http_proxy_host
      minimum_version: "2.8.x"
      required: semi
      default: null
      value_in_examples: example
      datatype: string
      description: |
        The HTTP hostname or IP address of a proxy. Use this setting with
        `http_proxy_port` to access a certificate revocation list
        (CRL) or an OCSP server.

        Required if `http_proxy_port` is set.
    - name: http_proxy_port
      minimum_version: "2.8.x"
      required: semi
      default: null
      value_in_examples: 80
      datatype: string
      description: |
        The TCP port of the HTTP proxy.

        Required if `http_proxy_host` is set.
    - name: https_proxy_host
      minimum_version: "2.8.x"
      required: semi
      default: null
      value_in_examples:
      datatype: string
      description: |
        The HTTPS hostname or IP address of a proxy. Use this setting with
        `https_proxy_port` to access a certificate revocation list
        (CRL) or an OCSP server.

        Required if `https_proxy_port` is set.
    - name: https_proxy_port
      minimum_version: "2.8.x"
      required: semi
      default: null
      value_in_examples:
      datatype: string
      description: |
        The TCP port of the HTTPS proxy.

        Required if `https_proxy_host` is set.
    - name: send_ca_dn
      minimum_version: "3.1.x"
      required: false
      default: false
      value_in_examples:
      datatype: boolean
      description: |
        Sends the distinguished names (DN) of the configured CA list in the TLS handshake message.
    - name: allow_partial_chain
      minimum_version: "3.1.x"
      required: true
      default: false
      value_in_examples:
      datatype: boolean
      description: |
        Allow certificate verification with only an intermediate certificate.
        When this is enabled, you don't need to upload the full chain to Kong Certificates.
