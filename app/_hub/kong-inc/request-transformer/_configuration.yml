name: request-transformer
service_id: true
route_id: true
consumer_id: true
konnect_examples: false
protocols:
  - name: http
  - name: https
  - name: grpc
  - name: grpcs
  - name: tcp
  - name: tls
  - name: tls_passthrough
    minimum_version: "2.7.x"
  - name: udp
  - name: ws
    minimum_version: "3.0.x"
  - name: wss
    minimum_version: "3.0.x"
dbless_compatible: 'yes'
config:
  - name: http_method
    required: false
    datatype: string
    description: Sets the HTTP method for the upstream request.
  - name: remove.headers
    required: false
    value_in_examples:
      - x-toremove
      - x-another-one
    datatype: array of string elements
    description: List of header names. Unset the headers with the given name.
  - name: remove.querystring
    required: false
    value_in_examples:
      - 'qs-old-name:qs-new-name'
      - 'qs2-old-name:qs2-new-name'
    datatype: array of string elements
    description: List of querystring names. Remove the querystring if it is present.
  - name: remove.body
    required: false
    value_in_examples:
      - formparam-toremove
      - formparam-another-one
    datatype: array of string elements
    description: |
      List of parameter names. Remove the parameter if and only if content-type is one the following:
      [`application/json`, `multipart/form-data`, `application/x-www-form-urlencoded`] and the parameter is present.
  - name: replace.uri
    required: false
    datatype: string
    description: |
      Updates the upstream request URI with a given value. This value can be used to update
      only the path part of the URI, not the scheme or the hostname.
  - name: replace.body
    required: false
    value_in_examples:
      - 'body-param1:new-value-1'
      - 'body-param2:new-value-2'
    datatype: array of string elements
    description: |
      List of `paramname:value` pairs. If and only if content-type is one the following
      [`application/json`, `multipart/form-data`, `application/x-www-form-urlencoded`] and the
      parameter is already present, replace its old value with the new one. Ignored if
      the parameter is not already present.
  - name: replace.headers
    required: false
    datatype: array of string elements
    description: |
      List of `headername:value` pairs. If and only if the header is already set, replace
      its old value with the new one. Ignored if the header is not already set.
  - name: replace.querystring
    required: false
    datatype: array of string elements
    description: |
      List of `queryname:value pairs`. If and only if the field name is already set,
      replace its old value with the new one. Ignored if the field name is not already set.
  - name: rename.headers
    required: false
    value_in_examples:
      - 'header-old-name:header-new-name'
      - 'another-old-name:another-new-name'
    datatype: array of string elements
    description: |
      List of `headername:value` pairs. If and only if the header is already set, rename
      the header. The value is unchanged. Ignored if the header is not already set.
  - name: rename.querystring
    required: false
    value_in_examples:
      - 'qs-old-name:qs-new-name'
      - 'qs2-old-name:qs2-new-name'
    datatype: array of string elements
    description: |
      List of queryname:value pairs. If and only if the field name is already set, rename the field name.
      The value is unchanged. Ignored if the field name is not already set.
  - name: rename.body
    required: false
    value_in_examples:
      - 'param-old:param-new'
      - 'param2-old:param2-new'
    datatype: array of string elements
    description: |
      List of `paramname:value` pairs. Rename the parameter name if and only if
      content-type is one the following [`application/json`, `multipart/form-data`, `application/x-www-form-urlencoded`]
      and the parameter is present.
  - name: add.headers
    required: false
    value_in_examples:
      - 'x-new-header:value'
      - 'x-another-header:something'
    datatype: array of string elements
    description: |
      List of `headername:value` pairs. If and only if the header is not already set, set a new header
      with the given value. Ignored if the header is already set.
  - name: add.querystring
    required: false
    value_in_examples:
      - 'new-param:some_value'
      - 'another-param:some_value'
    datatype: array of string elements
    description: |
      List of `queryname:value` pairs. If and only if the querystring is not already set, set a new
      querystring with the given value. Ignored if the querystring is already set.
  - name: add.body
    required: false
    value_in_examples:
      - 'new-form-param:some_value'
      - 'another-form-param:some_value'
    datatype: array of string elements
    description: |
      List of `paramname:value` pairs. If and only if content-type is one the
      following [`application/json`, `multipart/form-data`, `application/x-www-form-urlencoded`]
      and the parameter is not present, add a new parameter with the given value to the form-encoded
      body. Ignored if the parameter is already present.
  - name: append.headers
    required: false
    datatype: array of string elements
    description: |
      List of `headername:value` pairs. If the header is not set, set it with the given value.
      If it is already set, an additional new header with the same name and the new value will be appended.
  - name: append.querystring
    required: false
    datatype: array of string elements
    description: 'List of `queryname:value` pairs. If the querystring is not set, set it with the given value. If it is already set, a new querystring with the same name and the new value will be set.'
  - name: append.body
    required: false
    datatype: array of string elements
    description: |
      List of `paramname:value` pairs. If the content-type is one the following
      [`application/json`, `application/x-www-form-urlencoded`], add a new parameter
      with the given value if the parameter is not present. Otherwise, if it is already present,
      aggregate the two values (old and new) in an array.
extra: |
  **Notes**:
  * If the value contains a `,` (comma), then the comma-separated format for lists cannot be used. The array
  notation must be used instead.
  * The `X-Forwarded-*` fields are non-standard header fields written by Nginx to inform the upstream about
  client details and can't be overwritten by this plugin. If you need to overwrite these header fields, see the
  [post-function plugin in Serverless Functions](https://docs.konghq.com/hub/kong-inc/serverless-functions/).
