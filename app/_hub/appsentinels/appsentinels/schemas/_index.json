{
  "fields": [
    {
      "protocols": {
        "elements": {
          "one_of": [
            "http",
            "https"
          ],
          "type": "string"
        },
        "required": true,
        "type": "set",
        "default": [
          "http",
          "https"
        ]
      }
    },
    {
      "config": {
        "type": "record",
        "fields": [
          {
            "http_endpoint": {
              "type": "string",
              "required": true,
              "description": "URL of AppSentinels edge controller"
            }
          },
          {
            "method": {
              "type": "string",
              "default": "POST",
              "one_of": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "description": "Method for HTTP logging request to AppSentinels edge controllr"
            }
          },
          {
            "content_type": {
              "type": "string",
              "default": "application/json",
              "one_of": [
                "application/json"
              ],
              "description": "Content-Type for HTTP logging request to AppSentinels edge controllr"
            }
          },
          {
            "timeout": {
              "type": "number",
              "default": 100,
              "description": "Authz request timeout"
            }
          },
          {
            "log_timeout": {
              "type": "number",
              "default": 150,
              "description": "Logging request timeout for response and transparent mode"
            }
          },
          {
            "connect_timeout": {
              "type": "number",
              "default": 1000,
              "description": "HTTP Connect timeout to AppSentinels edge controller"
            }
          },
          {
            "stats_timeout": {
              "type": "number",
              "default": 5,
              "description": "Stats message frequency in seconds to AppSentinels edge controller"
            }
          },
          {
            "keepalive": {
              "type": "number",
              "default": 60000,
              "description": "HTTP Keepalive timeout for connections to AppSentinels edge controller"
            }
          },
          {
            "retry_count": {
              "type": "integer",
              "default": 0,
              "description": "Number of retries for HTTP logging request in case of failure"
            }
          },
          {
            "queue_size": {
              "type": "integer",
              "default": 5,
              "description": "Number of entries in the batched queue"
            }
          },
          {
            "queue_num": {
              "type": "integer",
              "default": 5,
              "description": "Number of batched queues"
            }
          },
          {
            "queue_max_entries": {
              "type": "integer",
              "default": 10000,
              "description": "Maximum number of entries in the batched queue"
            }
          },
          {
            "flush_timeout": {
              "type": "number",
              "default": 1,
              "description": "Flush timeout for batched queue in seconds"
            }
          },
          {
            "no_self_signed": {
              "type": "boolean",
              "default": false,
              "description": "Enable server (AppSentinels edge controller) cert verification"
            }
          },
          {
            "authz": {
              "type": "boolean",
              "default": false,
              "description": "Enable authz/enforcement mode"
            }
          },
          {
            "authz_fail_allow": {
              "type": "boolean",
              "default": true,
              "description": "Enable authz fail open for authz/enforcement mode"
            }
          },
          {
            "authz_fail_msg": {
              "type": "string",
              "default": "Unauthorized by Appsentinels",
              "description": "Custom authz fail message sent to client in authz/enforcement mode"
            }
          },
          {
            "path_requestlog": {
              "type": "string",
              "default": "/auth",
              "description": "Set request log path in authz/enforcement mode"
            }
          },
          {
            "path_responselog": {
              "type": "string",
              "default": "/nginxlog",
              "description": "Set response log path in authz/enforcement mode"
            }
          },
          {
            "path_mergedlog": {
              "type": "string",
              "default": "/mergedlog",
              "description": "Set merged log path in transparent mode"
            }
          },
          {
            "path_stats": {
              "type": "string",
              "default": "/nginxstats",
              "description": "Set stats request path"
            }
          },
          {
            "compress_logs": {
              "type": "boolean",
              "default": true,
              "description": "Enable gzip compression for logs"
            }
          },
          {
            "unhealthy_threshold": {
              "type": "integer",
              "default": 3,
              "description": "Number of failures to consider before declaring connection to AppSentinels edge controller as unhealthy"
            }
          },
          {
            "shaper_type": {
              "type": "string",
              "default": "linear",
              "description": "Shaping algorithm to use"
            }
          },
          {
            "shaper_max_stages": {
              "type": "number",
              "default": 180,
              "description": "Maximum number of stages in shaper algorithm"
            }
          },
          {
            "shaper_base": {
              "type": "number",
              "default": 3,
              "description": "Base for shaper steps, in number of logs"
            }
          },
          {
            "shaper_multiplier": {
              "type": "number",
              "default": 1,
              "description": "Multiplier for shaper steps"
            }
          },
          {
            "shaper_step_duration": {
              "type": "number",
              "default": 1000,
              "description": "Duration of each shaper step in milliseconds"
            }
          },
          {
            "shaper_fallback_rate": {
              "type": "number",
              "default": 1.25,
              "description": "Shaper fallback rate in case of failures"
            }
          },
          {
            "shaper_idle_timeout": {
              "type": "number",
              "default": 60000,
              "description": "Shaper idle timeout in milliseconds"
            }
          },
          {
            "console_error_supp_rate": {
              "type": "number",
              "default": 10,
              "description": "Console error logging suppression rate"
            }
          },
          {
            "normalize_factor": {
              "type": "number",
              "default": 0,
              "description": "Normalize factor for shaper"
            }
          },
          {
            "max_payload": {
              "type": "number",
              "default": 131072,
              "description": "Maximum payload size in bytes, beyond which payload wont be logged"
            }
          },
          {
            "early_payload_threshold": {
              "type": "number",
              "default": 32768,
              "description": "Payloads greater then this will be logged during access phase without holding in the memory"
            }
          },
          {
            "content_regex": {
              "type": "string",
              "default": "(json|form|xml|graphql)",
              "description": "Regular expression to match content type for logging"
            }
          },
          {
            "force_read_client_payload": {
              "type": "boolean",
              "default": false,
              "description": "Force read client payload to determine the size if content length isnt available in request headers"
            }
          },
          {
            "instance_name": {
              "type": "string",
              "default": "NA",
              "description": "Configure to identify Kong deployment instances"
            }
          },
          {
            "stats_send_timeout": {
              "type": "number",
              "default": 4000,
              "description": "Stats send timeout in milliseconds"
            }
          },
          {
            "trace": {
              "type": "boolean",
              "default": false,
              "description": "Enable plugin logging on console"
            }
          }
        ]
      }
    }
  ]
}
