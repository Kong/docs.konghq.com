[
  {
    "id": "master",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 600,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "503c85e9-7f42-4e58-af09-59b9461fcf7c",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": ["create-realm"],
            "client": {
              "master-realm": [
                "manage-realm",
                "manage-clients",
                "view-users",
                "query-realms",
                "view-realm",
                "manage-users",
                "query-users",
                "view-identity-providers",
                "manage-authorization",
                "view-events",
                "create-client",
                "view-authorization",
                "impersonation",
                "manage-events",
                "query-clients",
                "query-groups",
                "manage-identity-providers",
                "view-clients"
              ]
            }
          },
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "37ae458c-5102-49ea-b752-e41231381821",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": ["offline_access", "uma_authorization"],
            "client": {
              "account": ["manage-account", "view-profile"]
            }
          },
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "0543fbe2-466b-4412-9275-6c276dc354b5",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "8a600624-9121-4b6f-8786-1b345e52a1f9",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "e0566c0d-574a-4c33-9abb-50166d23bc58",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "service": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "4c637aa6-63ca-48fc-adf8-23654d465032",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "16c03acd-903f-41d5-b06a-9532ec53f80c",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "f43aa6d3-2616-464a-b4d3-da3da8382cdf",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "a917b272-1e9a-4a0e-b94a-0b2f4bbf12b9",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "905b0ce4-9221-49b6-bdf2-1bff07b08828",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": ["query-users", "query-groups"]
              }
            },
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "dec3559c-54f8-40ee-a18a-810e476f973e",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "8b0c83a8-7cfc-4e24-a978-c4c0d321cea0",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "f98d2196-c123-452f-a827-8474e00ce9ea",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "9c304dba-7c17-448a-9a20-a1b5f880783f",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "2a84be7d-ad1a-4b0f-86a2-a2a61da67b1d",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "6cf775b9-ce36-49a9-8538-0b781da385ca",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "dfd595fa-31a5-4b2e-9db0-55957d5c84de",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "ce8bb17d-181f-4d4a-b2c4-2485e5f61b49",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "150ac2d7-e12d-458f-a117-582229d404d9",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "dbe81444-486d-43a6-a060-c4417822022a",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "4d6c17e6-6296-45a4-8a10-cb9395a80dc7",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "1b079330-2f85-4b7a-a0f3-995a544b3332",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "480c51fc-2296-48d0-8183-4bd3714d0356",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "db0a2e32-65af-4454-bf6d-94ce0cf590d3",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          },
          {
            "id": "0968609b-79b4-4df2-b03d-f34d5015a0ba",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "422508c4-bd0a-4d42-a85b-85d73e77e433",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "9bcc8079-53b2-48e7-b99e-ae75f0583f1a",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "3e78b506-e740-4245-ab23-ec935b1b1f36",
            "attributes": {}
          },
          {
            "id": "9c7b6b45-1314-4b1c-bff3-fa9d0d4e1c0c",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["manage-account-links"]
              }
            },
            "clientRole": true,
            "containerId": "3e78b506-e740-4245-ab23-ec935b1b1f36",
            "attributes": {}
          },
          {
            "id": "aab57252-d9e3-4138-a6ce-9455b31ee4af",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "3e78b506-e740-4245-ab23-ec935b1b1f36",
            "attributes": {}
          },
          {
            "id": "4845edf0-726b-48b5-828f-321298a929b2",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["view-consent"]
              }
            },
            "clientRole": true,
            "containerId": "3e78b506-e740-4245-ab23-ec935b1b1f36",
            "attributes": {}
          },
          {
            "id": "52669ac5-0c44-44b4-8b28-9724943100ea",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "3e78b506-e740-4245-ab23-ec935b1b1f36",
            "attributes": {}
          },
          {
            "id": "0d45a850-77d4-44bb-a17b-ef502ecf01cd",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "3e78b506-e740-4245-ab23-ec935b1b1f36",
            "attributes": {}
          },
          {
            "id": "c9553e21-c7c9-4ad1-ab77-a91a3d85d4c9",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "3e78b506-e740-4245-ab23-ec935b1b1f36",
            "attributes": {}
          }
        ],
        "kong": []
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "37ae458c-5102-49ea-b752-e41231381821",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "master"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "clientProfiles": {},
    "clientPolicies": {},
    "users": [
      {
        "id": "b70908d1-2aaa-443c-92e9-62f7e6733b57",
        "createdTimestamp": 1622125965391,
        "username": "admin",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "credentials": [
          {
            "id": "a5fe9483-6085-467d-99de-724e94626e9b",
            "type": "password",
            "createdDate": 1622125965599,
            "secretData": "{\"value\":\"/Ti5Gec8uupwmmXPO/47EXqyjFpXN0fs/I2S6UND7C5WW+pAN1ehgrIj36O4qkwlSgXYRf2L9KsCE4hKOnh4kA==\",\"salt\":\"f7CvJpRXKNe6BOsklrGxug==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": ["default-roles-master", "admin"],
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "3f89cf15-54b1-4e0d-aa89-8275074e392e",
        "createdTimestamp": 1622127053219,
        "username": "john",
        "enabled": true,
        "totp": false,
        "emailVerified": true,
        "firstName": "John",
        "lastName": "Doe",
        "credentials": [
          {
            "id": "937544f5-2662-4827-969e-84e50b8c4530",
            "type": "password",
            "createdDate": 1622127065689,
            "secretData": "{\"value\":\"9pF5YxvEnaDq6AFkBU/H568sM2ROcSSWcPJI1PegoRO9MDUzdAA/A/NvIQ7CHmEslwJpgnQUBTuMpNOa66T/Og==\",\"salt\":\"cGb7pxxtZwCsqxT3pGa2nw==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": ["default-roles-master"],
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "00461b23-5671-4d8c-8a65-2591c054186c",
        "createdTimestamp": 1622126952541,
        "username": "service-account-service",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "service",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": ["default-roles-master"],
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": ["offline_access"]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": ["manage-account"]
        }
      ]
    },
    "clients": [
      {
        "id": "3e78b506-e740-4245-ab23-ec935b1b1f36",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/master/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b3212336-9722-44f8-a98d-05a0427f70e3",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/master/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "a8e63c78-a1d8-4a9a-b453-baa7437378d5",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "ff7c36d8-f006-44a5-bb4e-16d45ad34238",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "16c03acd-903f-41d5-b06a-9532ec53f80c",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "4e95e204-4e42-4cab-853d-5ea69f6ccb27",
        "clientId": "kong",
        "name": "Kong Client",
        "description": "Kong OpenID Connect Demo",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-jwt",
        "secret": "1d3f49f0-c31a-4238-b659-b5a5b031bef1",
        "redirectUris": ["http://service.test:8000/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "use.jwks.url": "true",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "jwks.url": "http://kong.test:8001/openid-connect/jwks",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "30b272b5-92ec-4e14-9f58-e4c4618046b0",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f3b3e2de-e55f-4167-ad10-cdb73a20ade6",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "832ccd5e-046a-4efb-be46-aca36e5954fe",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "422508c4-bd0a-4d42-a85b-85d73e77e433",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "620e286c-f505-46bd-9afb-aa992f98150a",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/admin/master/console/*"],
        "webOrigins": ["+"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "bf64c2e5-b29c-4426-9be9-c9d5d4dd1352",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "9276f900-fea4-4b39-953b-8d31643e42d9",
        "clientId": "service",
        "name": "Service Client",
        "description": "Kong OpenID Connect Demo Service Client",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "cf4c655a-0622-4ce6-a0de-d3353ef0b714",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "07829a9c-ff59-467b-9888-f0d8878494a2",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "471769ea-43c0-4dd3-9489-4a17ce071675",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "40d6266b-c5f3-477d-a06a-b61f4523451a",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "d082c582-a5de-4887-89ee-17cd5b02b290",
        "clientId": "cert-bound",
        "name": "Cert Bound",
        "description": "Kong OpenID Connect cert-bound Client",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "cf4c655a-0622-4ce6-a0de-d3353ef0b714",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "tls.client.certificate.bound.access.tokens": "true",
          "display.on.consent.screen": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "5143dca1-6e9a-4ba7-9980-e558d6c7e531",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3ce9c1af-cf38-43e7-a769-079d671cddb8",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "55bbdbb5-156d-4109-b6b1-7f7c4b22c1ae",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "ea9f0b5c-ea87-45e7-b794-75d960a0959b",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "cfde3eef-1c68-44c1-a44f-cff8c3ef7805",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "b44f5ca6-80d9-44e5-a518-7c6138320c48",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "afd134c1-e294-4200-bc27-d4d89ad7c3b1",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "bef11af4-6f51-47a6-9d0b-d3c4ab184fba",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a7e414aa-ce1d-4fdc-a4b3-8adcdf09d494",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "6d50578c-7448-4c08-9148-44a6b160e980",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "1fe59b28-5fbc-4f7c-8094-99be6c120f78",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "08592a89-0e9f-4d95-86d0-c5447c5c91cb",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c3d08957-836e-4b6b-b1b3-068edcce80b6",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b0c84512-6199-4999-80fa-7d20049384ff",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5a428de2-656a-497b-a136-97e10826d138",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1a2b132a-8096-4ca0-8268-34264e3d6b9a",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "84f05d5c-66d6-4dd0-b60e-5aa1018145fc",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6631987f-40e7-455a-8142-424784c8c879",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c5f34057-e75c-4493-8ff1-4e3b45f0e2ef",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "bde854ed-0d14-409a-b6f7-0a4c4992cc08",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "628c06da-d6ca-4813-9419-b499f13f34e6",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "575bd928-5a9e-4d29-8ffd-152560cb58d3",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "284f82fa-8f86-48d7-a6e4-6015c41fe281",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ed24a29b-2f1c-489d-9c45-c93f593b8c2b",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "3b4be7d3-05a3-41d8-a21a-99ffd5fd3900",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "91b2d40d-4835-4b9c-9a07-42abd4e6b51b",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ad39bb04-2e71-42c7-9d71-87dfdf80504a",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "d1335211-bfc0-45a4-b05e-8711597ba2fb",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "0eccba21-55b9-4dc9-8d18-8a23102dc512",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "77a4790b-393a-467c-b792-ff0563490efc",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "04c16628-288d-472a-a9ff-0a6de226c4ac",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "1ce5ff4c-76d3-4145-955c-20c8eb191b96",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "740568a8-78b0-481c-b2da-1a995da4ca13",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "5b863e8d-bd3f-410c-b89b-4412adc16a9b",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "a1b264a0-cba1-4163-aa94-5e4eb9413ffc",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "307e8c42-46e8-481b-ad7b-8a13cbf9688d",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "6375ab4c-cad6-4a36-a9dd-7ab879113ecc",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "40f67945-5b56-49f0-80ad-d3f39f5786dc",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "bd271d2e-d405-4a1a-bc02-ab88cb48f5da",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "5e7337c4-39d5-4928-a90a-d7d769dca6d1",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": ["true"],
            "client-uris-must-match": ["true"]
          }
        },
        {
          "id": "395c51b6-1332-4831-aa21-35bf80d74cb0",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "6c11ce1d-a12a-4f38-b308-1ed285431f6f",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": ["200"]
          }
        },
        {
          "id": "804a2ce2-e161-4752-82c1-09a4880a9c8a",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "0b08e85a-e82b-4ea9-81af-f382560d3e5b",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "c1028db1-58c6-4db9-8e87-8ee0d504fdf5",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "9480be9a-5d6f-4f2e-98c8-c825d49ea852",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "28508925-541b-4965-8dc1-45b624ee63bc",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": ["26361838-eace-4305-b247-b8f9cac043ff"],
            "secret": ["cAMEhIDDMgDCyTjIyhnfHg"],
            "priority": ["100"]
          }
        },
        {
          "id": "b07e0fcb-b34b-4a4b-9f24-cf258bd58c71",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": ["b0cf8d58-e914-40ef-bd1a-fa5bbf1135de"],
            "secret": [
              "HdcJTyDCUSZmgqgBGX0mhshwHXhddRCvMie3KwN-IJydbd0ySKS89F6qvLSziBhuB1qlFg6CxiykcO41B84t2g"
            ],
            "priority": ["100"],
            "algorithm": ["HS256"]
          }
        },
        {
          "id": "626899c8-c945-4084-b77c-f3b9e7848e2d",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAqEME5qkRm14MA38bNj2uHf0uJBK28jhh6otbyEPsPK6YrHcz6YNx9EXQUWXY/DJ7X3K0YVGcaadie1L6bWYFaiwdbr2oS1ffeOL425GNoA+SlD0AmI4L23OnHtAkEpcP3rz6CWN/8NvQvZl7fh3kOnPQlULFVpmoM+YYjrQJ1gG9gDqHSlZUt1mIrGSTuHZuJTIPIJBh3fk0VEUGBTmslJyWXmmR7CKTiXuDYD13x7GModuCxO3W9U7uqtOmPZDJnchDbssGaHiuYhX3NgaTcpozqWqan3q0bitre/hoXq/uJsE+NS6OST2YSRwQ6ZfsSYcMMgqkuNxCqqM+B5QV7wIDAQABAoIBAF/McIDnJ4ge3pYrCxIxwe1/FYMiSJjV8yG3oFUAHwNZoMEoyRydYwbhrL57TzQfhdCNHRf/gB9DVrXCQ6R/nnuZjFRdlPD4odpQ18EjONA1rY3KwYkZ7rROP4sylCclbLqzO2SXCuPWMx2PwhjG6gdBozMoJfStXW/XBIpTBPqbacsYZBBAbStVHG4kqZiUBJLlMVWcw7kuuY8Uhk1IEP5zhwLSDN+PBLmz1KbQ5iBveajimdTMZOqVYT1stXGxWC2SPO/QG6qkSSJYc0w9TaSjG7oJva3AQNXa7KJ9mHbDFnoGN8OejbNiCqXHLiXbcTxqClbRv1tay/qPsxjM51ECgYEA8suYYtPfAP9dVgIBVdOHFyD6fmfrhFDQacx6lJNYwF7niI2+gtxezDz38EASPlzQb21saXLT3S1pCqzyWxPGdIQ0Gvcutggq37dpUsLSXpemGnSDUV7xPKJq4ejuMRW8gowMercBDicnrFf0jqNhMY+q1VPhY9fPHjq6DDZzYOcCgYEAsWm0Vh4Nr+q2auOEf40eSbF4Nrw9CZW7fEGI6Yn8NqBO2eO78hA2IjpgeNZSSJ5xDD4ET67/CPUPp2sZR38s6tNSCwwkN8SW+Sbb8ZiLJ7sX4d9mZIqSvWYW2AoWm2V+xR/Sr3XRqlr91ThSy3A9Tu+LcWDcPSVl+0h70F5PmbkCgYEAyFT7MJg3CgCqx7ux1FpLvebFKSWf67YusQ06G3uUoG3uRvsFtb4VLhokTgTfyLsWdMppyHwpmfbNFDTtZ/7iIeOvhoxr62DD14HjkpkTsV8Ze/ylGa/oBqrQ3AQw/Sk9OM5LwblcUow2LPsJ2+Os35L2Vzz13UcFK6EzP75x5wMCgYBmhZ8g5N0j+47O1guLahFGpLfDaaQcFdryQyzLSGHnb1whrei+SX/+5504NyH1tRm+6Ve0dHwMwRD6vnktR+C9EsEmgS2szH4yHLKdOnmvy/5RGLgjAbEqogQxdCL8SfqoD2vA2WT//PUScinmRkYnh2YdbsvWyfXU8F4cW2PEgQKBgHuM4Hr/Sm/szLoL+HOzu/JLsdF5PLJ9xximR1G9Fst/Nsljx51bwCZhE1o1Nnpfpjl+x2b51ZnBKl2r4Ky/1pHVtCu9Y5FQ35sJWLrXO7FE/7vIIN8VegYT4/EjM1IgDDhCqLnAx5u54YWol83vVy5L2eUlvr8jShJf1NZr4964"
            ],
            "certificate": [
              "MIICmzCCAYMCBgF5rj2fszANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjEwNTI3MTQzMDQ0WhcNMzEwNTI3MTQzMjI0WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoQwTmqRGbXgwDfxs2Pa4d/S4kErbyOGHqi1vIQ+w8rpisdzPpg3H0RdBRZdj8MntfcrRhUZxpp2J7UvptZgVqLB1uvahLV9944vjbkY2gD5KUPQCYjgvbc6ce0CQSlw/evPoJY3/w29C9mXt+HeQ6c9CVQsVWmagz5hiOtAnWAb2AOodKVlS3WYisZJO4dm4lMg8gkGHd+TRURQYFOayUnJZeaZHsIpOJe4NgPXfHsYyh24LE7db1Tu6q06Y9kMmdyENuywZoeK5iFfc2BpNymjOpapqferRuK2t7+Gher+4mwT41Lo5JPZhJHBDpl+xJhwwyCqS43EKqoz4HlBXvAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACdTqLhUfntagigE9RSmQpQGyml1UdiRytJzuOLszvfL/EePVCeDIsIZiHk9X0x6zuk+ekDIKZyI3it32hNzNdkl8hAFoMSc2yUK7SJn2h1J2xC73gVh9yfIgZiFuDMt11AeRXga//TjLQxn3e0RhGvWB61DbC4fskpUwL0Z2bUT74JJT5Zuo8wo5Ao2DbHKWXavt3GLe0f9Kkgii1vunQYguMqvDtUa00d5uGZJ+Re4lvyhHBgQpzXbZjaelrZOGhIFtPCrnPV7004mnQ+2gOXcscy1mNj3QY9Ku1L1S1QWty1lmyhsdFx4CaufDb+83n15l7QmESFM9IAOJ9HtK44="
            ],
            "priority": ["100"]
          }
        },
        {
          "id": "523dfad4-53ed-4686-a9f5-e5e354c6bafc",
          "name": "fallback-HS512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": ["7e53f21d-43d6-456e-a43a-4e1e2d9c7019"],
            "secret": [
              "24vqpjwk2j6LOr_ZqAz7zwKD0b9Imx2bU_f3e6LH6GbcWiWDhsgbkuxPGKqsUF_31rcnxb3uVTBLF-c7FOLM-g"
            ],
            "priority": ["-100"],
            "algorithm": ["HS512"]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "4be825eb-db10-4de0-bf4b-e3c815c00551",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "31ea137a-f764-4e7f-b228-81a749a52d4d",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "b082840f-0761-4e22-bbda-91b38606a914",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "0c7a4831-efe4-4d3a-90e2-dfc07a7b2312",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "c27b748e-c8ce-4cb0-b2ab-401a1433f514",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "cd34efb9-3359-4aa2-b9bf-f00f7e523968",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d4b3db74-db9c-435f-9e35-36df56b5606a",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "5696dfbd-aef0-4d5b-b306-891508ea1305",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "5f14ba7e-1c09-425a-b1e0-d694054bbd9c",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "7d0eacb6-d68b-4217-bb95-75df0e0a204b",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "9a48d2e4-ea0c-488d-994e-07376203a77d",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "5f1440de-3be4-4fbe-828b-35ba070f7491",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "3fd9d117-6a30-4c67-bdd8-83a5dfea95fa",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "61401a2a-cd0b-4a00-94bd-0a7ba4b0cc38",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4ec1bf27-af5b-4e5b-b255-883a5defec0b",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4c12e390-c1d1-4edf-9872-c812ed2a1e8e",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "e04b09b9-e97c-4a4f-9c5b-1bc4cbfed9a8",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "10d30d0b-7bbe-4b0a-b977-ccb997bce905",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "bf40733d-140f-4cac-97df-cbc1ba90599e",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "6971da20-a124-4a15-8f7a-7fe8eec11d35",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "70a63fe5-cea1-4f37-a188-adff43adfa44",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "825b039e-ea1e-4781-a570-23db4d3d4788",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "600",
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5"
    },
    "keycloakVersion": "13.0.1",
    "userManagedAccessAllowed": false
  }
]
